<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="">
  <file path="lib/datasift.php" hash="a9c7d05f9abdd1a5ef5a244218db5f31" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <include line="75" type="Include" package="Default">
      <name/>
    </include>
    <function namespace="global" line="59" package="PHP-client">
      <name>datasift_autoloader</name>
      <full_name>\datasift_autoloader</full_name>
      <docblock line="52">
        <description>Class autoloader.</description>
        <long-description/>
        <tag line="52" name="param" description="The name of the class to load." type="string" variable="$classname">
          <type by_reference="false">string</type>
        </tag>
        <tag line="52" name="return" description="True if the class was successfully loaded." type="bool">
          <type by_reference="false">bool</type>
        </tag>
      </docblock>
      <argument line="59">
        <name>$classname</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="lib/DataSift/StreamConsumer.php" hash="2613c8d4adb690a19a81dbc174412a1a" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="27" package="PHP-client">
      <extends/>
      <name>DataSift_StreamConsumer</name>
      <full_name>\DataSift_StreamConsumer</full_name>
      <docblock line="17">
        <description>The DataSift_StreamConsumer class is an abstract base class for various
stream consumers.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
      </docblock>
      <constant namespace="global" line="29" package="PHP-client">
        <name>TYPE_HTTP</name>
        <full_name>TYPE_HTTP</full_name>
        <value>'HTTP'</value>
      </constant>
      <constant namespace="global" line="31" package="PHP-client">
        <name>STATE_STOPPED</name>
        <full_name>STATE_STOPPED</full_name>
        <value>0</value>
      </constant>
      <constant namespace="global" line="32" package="PHP-client">
        <name>STATE_STARTING</name>
        <full_name>STATE_STARTING</full_name>
        <value>1</value>
      </constant>
      <constant namespace="global" line="33" package="PHP-client">
        <name>STATE_RUNNING</name>
        <full_name>STATE_RUNNING</full_name>
        <value>2</value>
      </constant>
      <constant namespace="global" line="34" package="PHP-client">
        <name>STATE_STOPPING</name>
        <full_name>STATE_STOPPING</full_name>
        <value>3</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="39" namespace="global" package="Default">
        <name>$_user</name>
        <default>null</default>
        <docblock line="36">
          <description/>
          <long-description/>
          <tag line="36" name="var" description="" type="\DataSift_User">
            <type by_reference="false">\DataSift_User</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$_definition</name>
        <default>false</default>
        <docblock line="41">
          <description/>
          <long-description/>
          <tag line="41" name="var" description="" type="\DataSift_Definition">
            <type by_reference="false">\DataSift_Definition</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" namespace="global" package="Default">
        <name>$_auto_reconnect</name>
        <default>true</default>
        <docblock line="46">
          <description/>
          <long-description/>
          <tag line="46" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" namespace="global" package="Default">
        <name>$_is_multi</name>
        <default>false</default>
        <docblock line="51">
          <description/>
          <long-description/>
          <tag line="51" name="var" description="True if this is consuming multiple hashes" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" namespace="global" package="Default">
        <name>$_hashes</name>
        <default>array()</default>
        <docblock line="56">
          <description/>
          <long-description/>
          <tag line="56" name="var" description="The array of hashes to be consumed if using multi" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" namespace="global" package="Default">
        <name>$_state</name>
        <default>self::STATE_STOPPED</default>
        <docblock line="61">
          <description/>
          <long-description/>
          <tag line="61" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="69" namespace="global" package="Default">
        <name>$_eventHandler</name>
        <default>false</default>
        <docblock line="66">
          <description/>
          <long-description/>
          <tag line="66" name="var" description="The event handler object." type="\DataSift_IStreamConsumerEventHandler">
            <type by_reference="false">\DataSift_IStreamConsumerEventHandler</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="82" package="PHP-client">
        <name>factory</name>
        <full_name>factory</full_name>
        <docblock line="71">
          <description>Factory function.</description>
          <long-description>&lt;p&gt;Creates a StreamConsumer-derived object for the given
type.&lt;/p&gt;</long-description>
          <tag line="71" name="param" description="Use the TYPE_ constants" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="CSDL string or a Definition object." type="mixed" variable="$definition">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="71" name="param" description="The object that will receive events." type="string" variable="$eventHandler">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="return" description="The consumer object" type="\DataSift_StreamConsumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="71" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="82">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="82">
          <name>$definition</name>
          <default/>
          <type/>
        </argument>
        <argument line="82">
          <name>$eventHandler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="103" package="PHP-client">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="92">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;Do not use this directly, use the factory method instead.&lt;/p&gt;</long-description>
          <tag line="92" name="param" description="The user this consumer will run as." type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
          <tag line="92" name="param" description="CSDL string, a Definition object, or an array of hashes." type="mixed" variable="$definition">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="92" name="param" description="The object that will receive events." type="\DataSift_IStreamConsumerEventHandler" variable="$eventHandler">
            <type by_reference="false">\DataSift_IStreamConsumerEventHandler</type>
          </tag>
          <tag line="92" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="92" name="throws" description="" type="\DataSiftExceotion_CompileFailed">
            <type by_reference="false">\DataSiftExceotion_CompileFailed</type>
          </tag>
          <tag line="92" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$definition</name>
          <default/>
          <type/>
        </argument>
        <argument line="103">
          <name>$eventHandler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="152" package="PHP-client">
        <name>onData</name>
        <full_name>onData</full_name>
        <docblock line="146">
          <description>This is called when a complete JSON item is received.</description>
          <long-description/>
          <tag line="146" name="param" description="The JSON data." type="\" variable="$json"/>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$json</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="198" package="PHP-client">
        <name>onConnect</name>
        <full_name>onConnect</full_name>
        <docblock line="193">
          <description>This is called when the underlying stream is connected.</description>
          <long-description/>
          <tag line="193" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="211" package="PHP-client">
        <name>onInteraction</name>
        <full_name>onInteraction</full_name>
        <docblock line="203">
          <description>This is called for each interaction received from the stream and must
be implemented in extending classes.</description>
          <long-description/>
          <tag line="203" name="param" description="The interaction data structure" type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
          <tag line="203" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="211">
          <name>$hash</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="224" package="PHP-client">
        <name>onDeleted</name>
        <full_name>onDeleted</full_name>
        <docblock line="216">
          <description>This is called for each DELETE request received from the stream and must
be implemented in extending classes.</description>
          <long-description/>
          <tag line="216" name="param" description="The interaction data structure" type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
          <tag line="216" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="224">
          <name>$hash</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="237" package="PHP-client">
        <name>onStatus</name>
        <full_name>onStatus</full_name>
        <docblock line="229">
          <description>Called for each status message received from the stream.</description>
          <long-description/>
          <tag line="229" name="param" description="The status type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="229" name="param" description="The data received along with the status message." type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="229" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="237">
          <name>$info</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="250" package="PHP-client">
        <name>onError</name>
        <full_name>onError</full_name>
        <docblock line="242">
          <description>This is called when an error notification is received on a stream
connection.</description>
          <long-description/>
          <tag line="242" name="param" description="The error message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="242" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="263" package="PHP-client">
        <name>onWarning</name>
        <full_name>onWarning</full_name>
        <docblock line="255">
          <description>This is called when a warning notification is received on a scream
connection.</description>
          <long-description/>
          <tag line="255" name="param" description="The warning message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="255" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="263">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="273" package="PHP-client">
        <name>onDisconnect</name>
        <full_name>onDisconnect</full_name>
        <docblock line="268">
          <description>This is called when the underlying stream is disconnected.</description>
          <long-description/>
          <tag line="268" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="285" package="PHP-client">
        <name>onStopped</name>
        <full_name>onStopped</full_name>
        <docblock line="278">
          <description>This is called when the consumer is stopped.</description>
          <long-description/>
          <tag line="278" name="param" description="Reason to stop the stream" type="string" variable="$reason">
            <type by_reference="false">string</type>
          </tag>
          <tag line="278" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$reason</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="PHP-client">
        <name>consume</name>
        <full_name>consume</full_name>
        <docblock line="290">
          <description>Once an instance of a StreamConsumer is ready for use, call this to
start consuming.</description>
          <long-description>&lt;p&gt;Extending classes should implement onStart to handle
actually starting.&lt;/p&gt;</long-description>
          <tag line="290" name="param" description="Whether to reconnect automatically" type="boolean" variable="$auto_reconnect">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="290" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="299">
          <name>$auto_reconnect</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="315" package="PHP-client">
        <name>onStart</name>
        <full_name>onStart</full_name>
        <docblock line="308">
          <description>Called when the consumer should start consuming the stream.</description>
          <long-description/>
          <tag line="308" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="308" name="abstract" description=""/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="326" package="PHP-client">
        <name>stop</name>
        <full_name>stop</full_name>
        <docblock line="317">
          <description>This method can be called at any time to *request* that the consumer
stop consuming.</description>
          <long-description>&lt;p&gt;This method sets the state to STATE_STOPPING and it's
up to the consumer implementation to notice that this has changed, stop
consuming and call the onStopped method.&lt;/p&gt;</long-description>
          <tag line="317" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="317" name="throws" description="" type="\DataSift_Exception_InalidData">
            <type by_reference="false">\DataSift_Exception_InalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="344" package="PHP-client">
        <name>onStop</name>
        <full_name>onStop</full_name>
        <docblock line="334">
          <description>Default implementation of onStop.</description>
          <long-description>&lt;p&gt;It's unlikely that this method will
ever be used in isolation, but rather it should be called as the final
step in the extending class's implementation.&lt;/p&gt;</long-description>
          <tag line="334" name="param" description="Reason why the stream was stopped" type="string" variable="$reason">
            <type by_reference="false">string</type>
          </tag>
          <tag line="334" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="334" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="344">
          <name>$reason</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="36" code="50019">No short description for property $_user</critical>
      <critical line="41" code="50019">No short description for property $_definition</critical>
      <critical line="46" code="50019">No short description for property $_auto_reconnect</critical>
      <critical line="61" code="50019">No short description for property $_state</critical>
      <error line="71" code="50014">Name of argument $user does not match with the DocBlock's name $type in factory()</error>
      <error line="71" code="50014">Name of argument $type does not match with the DocBlock's name $definition in factory()</error>
      <error line="71" code="50014">Name of argument $definition does not match with the DocBlock's name $eventHandler in factory()</error>
      <error line="71" code="50015">Argument $eventHandler is missing from the Docblock of factory()</error>
      <error line="203" code="50015">Argument $hash is missing from the Docblock of onInteraction()</error>
      <error line="216" code="50015">Argument $hash is missing from the Docblock of onDeleted()</error>
    </parse_markers>
  </file>
  <file path="lib/DataSift/Exception/StreamError.php" hash="2d20605bb91c35cb53428b0da837d831" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="PHP-client">
      <extends>\Exception</extends>
      <name>DataSift_Exception_StreamError</name>
      <full_name>\DataSift_Exception_StreamError</full_name>
      <docblock line="17">
        <description>StreamError exception - Indicates that an error occurred while connection or reading from a stream connection.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
        <tag line="17" name="see" description="\global\Exception" refers="\global\Exception"/>
      </docblock>
    </class>
  </file>
  <file path="lib/DataSift/Exception/InvalidData.php" hash="b1aa9f35613438387d0793c222df54be" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="PHP-client">
      <extends>\Exception</extends>
      <name>DataSift_Exception_InvalidData</name>
      <full_name>\DataSift_Exception_InvalidData</full_name>
      <docblock line="17">
        <description>InvalidData exception - Thrown when a piece of code comes across data in an unexpected format.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
        <tag line="17" name="see" description="\global\Exception" refers="\global\Exception"/>
      </docblock>
    </class>
  </file>
  <file path="lib/DataSift/Exception/CompileFailed.php" hash="c8ec3d22ccced80f2f850794e6582858" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="PHP-client">
      <extends>\Exception</extends>
      <name>DataSift_Exception_CompileFailed</name>
      <full_name>\DataSift_Exception_CompileFailed</full_name>
      <docblock line="17">
        <description>CompileFailed exception - Thrown when a compile request fails due to errors in the definition.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
        <tag line="17" name="see" description="\global\Exception" refers="\global\Exception"/>
      </docblock>
    </class>
  </file>
  <file path="lib/DataSift/Exception/RateLimitExceeded.php" hash="11a3ce936c2dd681eea0270300ab8dd9" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="PHP-client">
      <extends>\Exception</extends>
      <name>DataSift_Exception_RateLimitExceeded</name>
      <full_name>\DataSift_Exception_RateLimitExceeded</full_name>
      <docblock line="17">
        <description>RateLimitExceeded exception - Indicates that your user has hit the DataSift API rate limit.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
        <tag line="17" name="see" description="\global\Exception" refers="\global\Exception"/>
      </docblock>
    </class>
  </file>
  <file path="lib/DataSift/Exception/NotYetImplemented.php" hash="81c774dbb5c6e7154af917701b081255" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="PHP-client">
      <extends>\Exception</extends>
      <name>DataSift_Exception_NotYetImplemented</name>
      <full_name>\DataSift_Exception_NotYetImplemented</full_name>
      <docblock line="17">
        <description>NotYetImplemented exception</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
        <tag line="17" name="see" description="\global\Exception" refers="\global\Exception"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="PHP-client">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description>Overrides the standard Exception handler to set a default message if
none is provided.</description>
          <long-description/>
          <tag line="29" name="param" description="Error message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="29" name="param" description="Error code" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="29" name="param" description="Previous exception" type="\Exception" variable="$previous">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="29" name="see" description="\Exception" refers="\Exception"/>
        </docblock>
        <argument line="39">
          <name>$message</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="39">
          <name>$code</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="39">
          <name>$previous</name>
          <default>null</default>
          <type>\Exception</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="lib/DataSift/Exception/APIError.php" hash="7b186e171c74e12fc87134647b3ce139" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="PHP-client">
      <extends>\Exception</extends>
      <name>DataSift_Exception_APIError</name>
      <full_name>\DataSift_Exception_APIError</full_name>
      <docblock line="17">
        <description>APIError exception - Indicates that an error occurred while making a request to the DataSift API.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
        <tag line="17" name="see" description="\global\Exception" refers="\global\Exception"/>
      </docblock>
    </class>
  </file>
  <file path="lib/DataSift/Exception/AccessDenied.php" hash="05b2a16212015788faca225f05e1c7b6" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="PHP-client">
      <extends>\Exception</extends>
      <name>DataSift_Exception_AccessDenied</name>
      <full_name>\DataSift_Exception_AccessDenied</full_name>
      <docblock line="17">
        <description>AccessDenied exception - Thrown if you try to access DataSift data to which you don't have access.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
        <tag line="17" name="see" description="\global\Exception" refers="\global\Exception"/>
      </docblock>
    </class>
  </file>
  <file path="lib/DataSift/Definition.php" hash="398bdb43c3a33d464222e6b8609a31c6" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="PHP-client">
      <extends/>
      <name>DataSift_Definition</name>
      <full_name>\DataSift_Definition</full_name>
      <docblock line="17">
        <description>The DataSift_Definition class represents a stream definition.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="31" namespace="global" package="Default">
        <name>$_user</name>
        <default>null</default>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="" type="\DataSift_User">
            <type by_reference="false">\DataSift_User</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="36" namespace="global" package="Default">
        <name>$_csdl</name>
        <default>''</default>
        <docblock line="33">
          <description/>
          <long-description/>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" namespace="global" package="Default">
        <name>$_hash</name>
        <default>false</default>
        <docblock line="38">
          <description/>
          <long-description/>
          <tag line="38" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" namespace="global" package="Default">
        <name>$_created_at</name>
        <default>false</default>
        <docblock line="43">
          <description/>
          <long-description/>
          <tag line="43" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" namespace="global" package="Default">
        <name>$_total_dpu</name>
        <default>false</default>
        <docblock line="48">
          <description/>
          <long-description/>
          <tag line="48" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="PHP-client">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="53">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;A DataSift_User object is required, and you can optionally
supply a default definition string.&lt;/p&gt;</long-description>
          <tag line="53" name="param" description="The user object." type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
          <tag line="53" name="param" description="An optional default definition string." type="string" variable="$csdl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="An optional hash for the passed definition." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$csdl</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="63">
          <name>$hash</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="PHP-client">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="76">
          <description>Returns the definition string.</description>
          <long-description/>
          <tag line="76" name="return" description="The definition." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="PHP-client">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="90">
          <description>Sets the definition string.</description>
          <long-description/>
          <tag line="90" name="param" description="The new definition string." type="string" variable="$csdl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="90" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$csdl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="PHP-client">
        <name>getHash</name>
        <full_name>getHash</full_name>
        <docblock line="119">
          <description>Returns the hash for this definition.</description>
          <long-description>&lt;p&gt;If the hash has not yet been
obtained it compiles the definition first.&lt;/p&gt;</long-description>
          <tag line="119" name="return" description="The hash." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="119" name="throws" description="" type="\DataSift_Exception_RateLimitExceeded">
            <type by_reference="false">\DataSift_Exception_RateLimitExceeded</type>
          </tag>
          <tag line="119" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="143" package="PHP-client">
        <name>clearHash</name>
        <full_name>clearHash</full_name>
        <docblock line="136">
          <description>Reset the hash to false.</description>
          <long-description>&lt;p&gt;The effect of this is to mark the definition
as requiring compilation. Also resets other variables that depend on
the CSDL.&lt;/p&gt;</long-description>
          <tag line="136" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="PHP-client">
        <name>getCreatedAt</name>
        <full_name>getCreatedAt</full_name>
        <docblock line="153">
          <description>Returns the date when the stream was first created.</description>
          <long-description>&lt;p&gt;If the created at
date has not yet been obtained it validates the definition first.&lt;/p&gt;</long-description>
          <tag line="153" name="return" description="The date as a unix timestamp." type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="153" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="153" name="throws" description="" type="\DataSift_Exception_RateLimitExceeded">
            <type by_reference="false">\DataSift_Exception_RateLimitExceeded</type>
          </tag>
          <tag line="153" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="PHP-client">
        <name>getTotalDPU</name>
        <full_name>getTotalDPU</full_name>
        <docblock line="177">
          <description>Returns the total DPU of the stream.</description>
          <long-description>&lt;p&gt;If the DPU has not yet been
obtained it validates the definition first.&lt;/p&gt;</long-description>
          <tag line="177" name="return" description="The date as a unix timestamp." type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="177" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="177" name="throws" description="" type="\DataSift_Exception_RateLimitExceeded">
            <type by_reference="false">\DataSift_Exception_RateLimitExceeded</type>
          </tag>
          <tag line="177" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="211" package="PHP-client">
        <name>compile</name>
        <full_name>compile</full_name>
        <docblock line="201">
          <description>Call the DataSift API to compile this defintion.</description>
          <long-description>&lt;p&gt;On success it will
store the returned hash.&lt;/p&gt;</long-description>
          <tag line="201" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="201" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="201" name="throws" description="" type="\DataSift_Exception_RateLimitExceeded">
            <type by_reference="false">\DataSift_Exception_RateLimitExceeded</type>
          </tag>
          <tag line="201" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="201" name="throws" description="" type="\DataSift_Exception_CompileFailed">
            <type by_reference="false">\DataSift_Exception_CompileFailed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="263" package="PHP-client">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="253">
          <description>Call the DataSift API to validate this defintion.</description>
          <long-description>&lt;p&gt;On success it will
store the returned hash.&lt;/p&gt;</long-description>
          <tag line="253" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="253" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="253" name="throws" description="" type="\DataSift_Exception_RateLimitExceeded">
            <type by_reference="false">\DataSift_Exception_RateLimitExceeded</type>
          </tag>
          <tag line="253" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="253" name="throws" description="" type="\DataSift_Exception_CompileFailed">
            <type by_reference="false">\DataSift_Exception_CompileFailed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="314" package="PHP-client">
        <name>getDPUBreakdown</name>
        <full_name>getDPUBreakdown</full_name>
        <docblock line="303">
          <description>Call the DataSift API to get the DPU for this definition.</description>
          <long-description>&lt;p&gt;Returns an
array containing...
  dpu =&gt; The breakdown of running the rule
  total =&gt; The total dpu of the rule&lt;/p&gt;</long-description>
          <tag line="303" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="303" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="303" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="303" name="throws" description="" type="\DataSift_Exception_CompileError">
            <type by_reference="false">\DataSift_Exception_CompileError</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="338" package="PHP-client">
        <name>getBuffered</name>
        <full_name>getBuffered</full_name>
        <docblock line="327">
          <description>Call the DataSift API to get buffered interactions.</description>
          <long-description/>
          <tag line="327" name="param" description="Optional number of interactions to return (max 200)." type="int" variable="$count">
            <type by_reference="false">int</type>
          </tag>
          <tag line="327" name="param" description="Optional start ID." type="int" variable="$from_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="327" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="327" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="327" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="327" name="throws" description="" type="\DataSift_Exception_CompileError">
            <type by_reference="false">\DataSift_Exception_CompileError</type>
          </tag>
        </docblock>
        <argument line="338">
          <name>$count</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="338">
          <name>$from_id</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="378" package="PHP-client">
        <name>createHistoric</name>
        <full_name>createHistoric</full_name>
        <docblock line="365">
          <description>Create a historic based on this CSDL.</description>
          <long-description/>
          <tag line="365" name="param" description="The timestamp from which to start the query." type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="365" name="param" description="The timestamp at which to end the query." type="int" variable="$end">
            <type by_reference="false">int</type>
          </tag>
          <tag line="365" name="param" description="An array of sources required." type="array" variable="$sources">
            <type by_reference="false">array</type>
          </tag>
          <tag line="365" name="param" description="An optional name for this historic." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="365" name="return" description="" type="\DataSift_Historic">
            <type by_reference="false">\DataSift_Historic</type>
          </tag>
          <tag line="365" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="365" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="365" name="throws" description="" type="\DataSift_Exception_CompileError">
            <type by_reference="false">\DataSift_Exception_CompileError</type>
          </tag>
        </docblock>
        <argument line="378">
          <name>$start</name>
          <default/>
          <type/>
        </argument>
        <argument line="378">
          <name>$end</name>
          <default/>
          <type/>
        </argument>
        <argument line="378">
          <name>$sources</name>
          <default/>
          <type/>
        </argument>
        <argument line="378">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="378">
          <name>$sample</name>
          <default>\DataSift_Historic::DEFAULT_SAMPLE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="393" package="PHP-client">
        <name>getConsumer</name>
        <full_name>getConsumer</full_name>
        <docblock line="383">
          <description>Returns a DataSift_StreamConsumer-derived object for this definition,
for the given type.</description>
          <long-description/>
          <tag line="383" name="param" description="The consumer type for which to construct a consumer." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="return" description="The consumer object." type="\DataSift_StreamConsumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="383" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="383" name="see" description="\DataSift_StreamConsumer" refers="\DataSift_StreamConsumer"/>
        </docblock>
        <argument line="393">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="393">
          <name>$eventHandler</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="28" code="50019">No short description for property $_user</critical>
      <critical line="33" code="50019">No short description for property $_csdl</critical>
      <critical line="38" code="50019">No short description for property $_hash</critical>
      <critical line="43" code="50019">No short description for property $_created_at</critical>
      <critical line="48" code="50019">No short description for property $_total_dpu</critical>
      <error line="365" code="50015">Argument $sample is missing from the Docblock of createHistoric()</error>
      <error line="383" code="50015">Argument $eventHandler is missing from the Docblock of getConsumer()</error>
    </parse_markers>
  </file>
  <file path="lib/DataSift/MockApiClient.php" hash="df38c44e98e049e6e90bc843f20e89af" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="PHP-client">
      <extends/>
      <name>DataSift_MockApiClient</name>
      <full_name>\DataSift_MockApiClient</full_name>
      <docblock line="17">
        <description>The DataSift_MockApiClient class is used in place of DataSift_ApiClient
in offline unit tests.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="29" namespace="global" package="Default">
        <name>$_response</name>
        <default>false</default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="38" package="PHP-client">
        <name>setResponse</name>
        <full_name>setResponse</full_name>
        <docblock line="31">
          <description>Set the response object</description>
          <long-description/>
          <tag line="31" name="param" description="Response" type="object" variable="$r">
            <type by_reference="false">object</type>
          </tag>
          <tag line="31" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$r</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="54" package="PHP-client">
        <name>call</name>
        <full_name>call</full_name>
        <docblock line="43">
          <description>Set the response object</description>
          <long-description/>
          <tag line="43" name="param" description="Username" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="API key" type="string" variable="$api_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="URL" type="string" variable="$endpoint">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="URL parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="43" name="param" description="User Agent string" type="string" variable="$user_agent">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
        <argument line="54">
          <name>$api_key</name>
          <default/>
          <type/>
        </argument>
        <argument line="54">
          <name>$endpoint</name>
          <default/>
          <type/>
        </argument>
        <argument line="54">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="54">
          <name>$user_agent</name>
          <default>'DataSiftPHP/0.0'</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="29" code="50018">No DocBlock was found for property $_response</error>
    </parse_markers>
  </file>
  <file path="lib/DataSift/ApiClient.php" hash="8ba32c10a82e5757cb9b73f2779d0927" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="PHP-client">
      <extends/>
      <name>DataSift_ApiClient</name>
      <full_name>\DataSift_ApiClient</full_name>
      <docblock line="17">
        <description>The DataSift_ApiClient class wraps access to the DataSift API.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="40" package="PHP-client">
        <name>call</name>
        <full_name>call</full_name>
        <docblock line="28">
          <description>Make a call to a DataSift API endpoint.</description>
          <long-description/>
          <tag line="28" name="param" description="The user's username." type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="The user's API key." type="string" variable="$api_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="The endpoint of the API call." type="string" variable="$endpoint">
            <type by_reference="false">string</type>
          </tag>
          <tag line="28" name="param" description="The parameters to be passed along with the request." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="return" description="The response from the server." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="28" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="28" name="throws" description="" type="\DataSift_Exception_RateLimitExceeded">
            <type by_reference="false">\DataSift_Exception_RateLimitExceeded</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
        <argument line="40">
          <name>$api_key</name>
          <default/>
          <type/>
        </argument>
        <argument line="40">
          <name>$endpoint</name>
          <default/>
          <type/>
        </argument>
        <argument line="40">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="40">
          <name>$user_agent</name>
          <default>'DataSiftPHP/1.0'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="89" package="PHP-client">
        <name>parseHTTPResponse</name>
        <full_name>parseHTTPResponse</full_name>
        <docblock line="82">
          <description>Parse an HTTP response.</description>
          <long-description>&lt;p&gt;Separates the headers from the body and puts
the headers into an associative array.&lt;/p&gt;</long-description>
          <tag line="82" name="param" description="The HTTP response to be parsed." type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="return" description="An array containing headers =&gt; array(header =&gt; value), and body." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="28" code="50015">Argument $user_agent is missing from the Docblock of call()</error>
    </parse_markers>
  </file>
  <file path="lib/DataSift/StreamConsumer/HTTP.php" hash="940eeafe65c1592cae0197422bd0b407" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="27" package="PHP-client">
      <extends>\DataSift_StreamConsumer</extends>
      <name>DataSift_StreamConsumer_HTTP</name>
      <full_name>\DataSift_StreamConsumer_HTTP</full_name>
      <docblock line="17">
        <description>The DataSift_StreamConsumer_HTTP class extends DataSift_StreamConsumer
and implements HTTP streaming.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$_conn</name>
        <default>null</default>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="The HTTP connection resource" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$_connect_timeout</name>
        <default>30</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="Connect timeout in seconds" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" namespace="global" package="Default">
        <name>$_read_timeout</name>
        <default>5</default>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="Read timeout in seconds" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" namespace="global" package="Default">
        <name>$_max_line_length</name>
        <default>65536</default>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="Max allowable line size from the stream" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" namespace="global" package="Default">
        <name>$_auto_reconnect</name>
        <default>true</default>
        <docblock line="49">
          <description/>
          <long-description/>
          <tag line="49" name="var" description="Automatically reconnect if the connection is dropped" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="PHP-client">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="54">
          <description>Constructor.</description>
          <long-description/>
          <tag line="54" name="param" description="The authenticated user" type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
          <tag line="54" name="param" description="CSDL string, Definition object, or array of hashes" type="mixed" variable="$definition">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="54" name="param" description="An object that implements IStreamConsumerEventHandler" type="mixed" variable="$eventHandler">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="54" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="54" name="throws" description="" type="\DataSift_Exceotion_CompileFailed">
            <type by_reference="false">\DataSift_Exceotion_CompileFailed</type>
          </tag>
          <tag line="54" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="54" name="see" description="\DataSift_StreamConsumer::__construct" refers="\DataSift_StreamConsumer::__construct"/>
        </docblock>
        <argument line="66">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$definition</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$eventHandler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="PHP-client">
        <name>setAutoReconnect</name>
        <full_name>setAutoReconnect</full_name>
        <docblock line="71">
          <description>Set whether to automatically reconnect to the stream if the connection
is dropped.</description>
          <long-description/>
          <tag line="71" name="param" description="True to enable automatic reconnection" type="bool" variable="$reconnect">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$reconnect</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="89" package="PHP-client">
        <name>onStart</name>
        <full_name>onStart</full_name>
        <docblock line="84">
          <description>SetUp</description>
          <long-description/>
          <tag line="84" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="170" package="PHP-client">
        <name>connect</name>
        <full_name>connect</full_name>
        <docblock line="165">
          <description>Connect to the DataSift HTTP stream</description>
          <long-description/>
          <tag line="165" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="291" package="PHP-client">
        <name>disconnect</name>
        <full_name>disconnect</full_name>
        <docblock line="286">
          <description>Disconnect from the DataSift stream</description>
          <long-description/>
          <tag line="286" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="305" package="PHP-client">
        <name>reconnect</name>
        <full_name>reconnect</full_name>
        <docblock line="300">
          <description>Reconnect to the DataSift stream</description>
          <long-description/>
          <tag line="300" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="lib/DataSift/IStreamConsumerEventHandler.php" hash="5f389df3c669bfa24229c85dbad27201" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2012 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <interface namespace="global" line="27" package="PHP-client">
      <name>DataSift_IStreamConsumerEventHandler</name>
      <full_name>\DataSift_IStreamConsumerEventHandler</full_name>
      <docblock line="17">
        <description>The DataSift_IStreamConsumerEvents interface defines the set of methods a
consumer event handler must implement.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="PHP-client">
        <name>onConnect</name>
        <full_name>onConnect</full_name>
        <docblock line="29">
          <description>Called when the stream is connected.</description>
          <long-description/>
          <tag line="29" name="param" description="The consumer sending the event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="PHP-client">
        <name>onInteraction</name>
        <full_name>onInteraction</full_name>
        <docblock line="38">
          <description>Called for each interaction consumed.</description>
          <long-description/>
          <tag line="38" name="param" description="The consumer sending the&#10;                                            event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="38" name="param" description="The interaction data." type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
          <tag line="38" name="param" description="The hash of the stream that&#10;                                            matched this interaction." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="49">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="62" package="PHP-client">
        <name>onDeleted</name>
        <full_name>onDeleted</full_name>
        <docblock line="51">
          <description>Called for each deletion notification consumed.</description>
          <long-description/>
          <tag line="51" name="param" description="The consumer sending the&#10;                                            event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="51" name="param" description="The interaction data." type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
          <tag line="51" name="param" description="The hash of the stream that&#10;                                            matched this interaction." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="62">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="62">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="PHP-client">
        <name>onStatus</name>
        <full_name>onStatus</full_name>
        <docblock line="64">
          <description>Called for each status message received.</description>
          <long-description/>
          <tag line="64" name="param" description="The consumer sending the&#10;                                            event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="64" name="param" description="The status type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="The data sent with the&#10;                                            status message." type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
          <tag line="64" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="75">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="75">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="PHP-client">
        <name>onWarning</name>
        <full_name>onWarning</full_name>
        <docblock line="77">
          <description>Called when a warning occurs or is received down the stream.</description>
          <long-description/>
          <tag line="77" name="param" description="The consumer sending the event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="77" name="param" description="The warning message." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="85">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="95" package="PHP-client">
        <name>onError</name>
        <full_name>onError</full_name>
        <docblock line="87">
          <description>Called when an error occurs or is received down the stream.</description>
          <long-description/>
          <tag line="87" name="param" description="consumer The consumer sending the event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="87" name="param" description="The error message." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="95">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="PHP-client">
        <name>onDisconnect</name>
        <full_name>onDisconnect</full_name>
        <docblock line="97">
          <description>Called when the stream is disconnected.</description>
          <long-description/>
          <tag line="97" name="param" description="The consumer sending the event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="97" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="114" package="PHP-client">
        <name>onStopped</name>
        <full_name>onStopped</full_name>
        <docblock line="106">
          <description>Called when the consumer stops for some reason.</description>
          <long-description/>
          <tag line="106" name="param" description="consumer The consumer sending the event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="106" name="param" description="The reason the consumer stopped." type="string" variable="$reason">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="114">
          <name>$reason</name>
          <default/>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="lib/DataSift/Historic.php" hash="6703e284d04e174702ae9d5e7272d3b6" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="PHP-client">
      <extends/>
      <name>DataSift_Historic</name>
      <full_name>\DataSift_Historic</full_name>
      <docblock line="17">
        <description>The DataSift_Historic class represents a historic query.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
      </docblock>
      <constant namespace="global" line="31" package="PHP-client">
        <name>DEFAULT_SAMPLE</name>
        <full_name>DEFAULT_SAMPLE</full_name>
        <value>100</value>
        <docblock line="28">
          <description>The default sample rate.</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="68" namespace="global" package="Default">
        <name>$_user</name>
        <default>null</default>
        <docblock line="65">
          <description/>
          <long-description/>
          <tag line="65" name="var" description="" type="\DataSift_User">
            <type by_reference="false">\DataSift_User</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" namespace="global" package="Default">
        <name>$_playback_id</name>
        <default>false</default>
        <docblock line="70">
          <description/>
          <long-description/>
          <tag line="70" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" namespace="global" package="Default">
        <name>$_dpus</name>
        <default>false</default>
        <docblock line="75">
          <description/>
          <long-description/>
          <tag line="75" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="83" namespace="global" package="Default">
        <name>$_availability</name>
        <default>false</default>
        <docblock line="80">
          <description/>
          <long-description/>
          <tag line="80" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" namespace="global" package="Default">
        <name>$_hash</name>
        <default>false</default>
        <docblock line="85">
          <description/>
          <long-description/>
          <tag line="85" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="93" namespace="global" package="Default">
        <name>$_start</name>
        <default>false</default>
        <docblock line="90">
          <description/>
          <long-description/>
          <tag line="90" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="98" namespace="global" package="Default">
        <name>$_end</name>
        <default>false</default>
        <docblock line="95">
          <description/>
          <long-description/>
          <tag line="95" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="103" namespace="global" package="Default">
        <name>$_created_at</name>
        <default>false</default>
        <docblock line="100">
          <description/>
          <long-description/>
          <tag line="100" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="108" namespace="global" package="Default">
        <name>$_sample</name>
        <default>false</default>
        <docblock line="105">
          <description/>
          <long-description/>
          <tag line="105" name="var" description="" type="double">
            <type by_reference="false">double</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="113" namespace="global" package="Default">
        <name>$_sources</name>
        <default>array()</default>
        <docblock line="110">
          <description/>
          <long-description/>
          <tag line="110" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="118" namespace="global" package="Default">
        <name>$_name</name>
        <default>false</default>
        <docblock line="115">
          <description/>
          <long-description/>
          <tag line="115" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="123" namespace="global" package="Default">
        <name>$_status</name>
        <default>'created'</default>
        <docblock line="120">
          <description/>
          <long-description/>
          <tag line="120" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="128" namespace="global" package="Default">
        <name>$_progress</name>
        <default>0</default>
        <docblock line="125">
          <description/>
          <long-description/>
          <tag line="125" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="133" namespace="global" package="Default">
        <name>$_volume_info</name>
        <default>false</default>
        <docblock line="130">
          <description/>
          <long-description/>
          <tag line="130" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="138" namespace="global" package="Default">
        <name>$_deleted</name>
        <default>false</default>
        <docblock line="135">
          <description/>
          <long-description/>
          <tag line="135" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="33" package="PHP-client">
        <name>listHistorics</name>
        <full_name>listHistorics</full_name>
        <argument line="33">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="33">
          <name>$page</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="33">
          <name>$per_page</name>
          <default>20</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="145" package="PHP-client">
        <name>generateName</name>
        <full_name>generateName</full_name>
        <docblock line="140">
          <description>Generate a name based on the current date/time.</description>
          <long-description/>
          <tag line="140" name="return" description="The generated name." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="PHP-client">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="150">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;Pass all fields to create a new historic, or provide a
User object and a playback_id as the $hash parameter to load an
existing query from the API.&lt;/p&gt;</long-description>
          <tag line="150" name="param" description="The user object." type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
          <tag line="150" name="param" description="The stream hash for the query." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="param" description="The start timestamp." type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="150" name="param" description="The end timestamp." type="int" variable="$end">
            <type by_reference="false">int</type>
          </tag>
          <tag line="150" name="param" description="The interaction types to match." type="array" variable="$sources">
            <type by_reference="false">array</type>
          </tag>
          <tag line="150" name="param" description="A name for this query." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="param" description="An optional sample rate for this query." type="int" variable="$sample">
            <type by_reference="false">int</type>
          </tag>
          <tag line="150" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="165">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
        <argument line="165">
          <name>$start</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="165">
          <name>$end</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="165">
          <name>$sources</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="165">
          <name>$name</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="165">
          <name>$sample</name>
          <default>100</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="233" package="PHP-client">
        <name>reloadData</name>
        <full_name>reloadData</full_name>
        <docblock line="226">
          <description>Reload the data for this object from the API.</description>
          <long-description/>
          <tag line="226" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="226" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="226" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="266" package="PHP-client">
        <name>initFromArray</name>
        <full_name>initFromArray</full_name>
        <docblock line="259">
          <description>Initialise this object from the data in the given array.</description>
          <long-description/>
          <tag line="259" name="param" description="The array of data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="259" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="339" package="PHP-client">
        <name>getHash</name>
        <full_name>getHash</full_name>
        <docblock line="330">
          <description>Returns the playback ID for this historic.</description>
          <long-description>&lt;p&gt;If the historic has not yet
been prepared that will be done automagically to obtain the ID.&lt;/p&gt;</long-description>
          <tag line="330" name="return" description="The playback ID." type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="330" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="330" name="throws" description="" type="\DataSift_Exception_RateLimitExceeded">
            <type by_reference="false">\DataSift_Exception_RateLimitExceeded</type>
          </tag>
          <tag line="330" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="352" package="PHP-client">
        <name>getStreamHash</name>
        <full_name>getStreamHash</full_name>
        <docblock line="347">
          <description>Returns the stream hash.</description>
          <long-description/>
          <tag line="347" name="return" description="The hash." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="366" package="PHP-client">
        <name>getDPUs</name>
        <full_name>getDPUs</full_name>
        <docblock line="357">
          <description>Returns the DPU cost of running this historic.</description>
          <long-description>&lt;p&gt;If the historic has not
yet been prepared that will be done automagically to obtain the cost.&lt;/p&gt;</long-description>
          <tag line="357" name="return" description="The DPU cost." type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="357" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="357" name="throws" description="" type="\DataSift_Exception_RateLimitExceeded">
            <type by_reference="false">\DataSift_Exception_RateLimitExceeded</type>
          </tag>
          <tag line="357" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="384" package="PHP-client">
        <name>getAvailability</name>
        <full_name>getAvailability</full_name>
        <docblock line="374">
          <description>Returns the data availability information for this historic.</description>
          <long-description>&lt;p&gt;If the
historic has not yet been prepared that will be done automagically to
obtain the cost.&lt;/p&gt;</long-description>
          <tag line="374" name="return" description="The data availability." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="374" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="374" name="throws" description="" type="\DataSift_Exception_RateLimitExceeded">
            <type by_reference="false">\DataSift_Exception_RateLimitExceeded</type>
          </tag>
          <tag line="374" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="397" package="PHP-client">
        <name>getStartDate</name>
        <full_name>getStartDate</full_name>
        <docblock line="392">
          <description>Returns the start date.</description>
          <long-description/>
          <tag line="392" name="return" description="The start date." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="407" package="PHP-client">
        <name>getEndDate</name>
        <full_name>getEndDate</full_name>
        <docblock line="402">
          <description>Returns the end date.</description>
          <long-description/>
          <tag line="402" name="return" description="The end date." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="418" package="PHP-client">
        <name>getCreatedAt</name>
        <full_name>getCreatedAt</full_name>
        <docblock line="412">
          <description>Returns the created at date.</description>
          <long-description>&lt;p&gt;To refresh this from the server call
reloadData().&lt;/p&gt;</long-description>
          <tag line="412" name="return" description="The created at date." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="428" package="PHP-client">
        <name>getSources</name>
        <full_name>getSources</full_name>
        <docblock line="423">
          <description>Returns the sources.</description>
          <long-description/>
          <tag line="423" name="return" description="The start date." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="438" package="PHP-client">
        <name>getProgress</name>
        <full_name>getProgress</full_name>
        <docblock line="433">
          <description>Returns the current progress.</description>
          <long-description/>
          <tag line="433" name="return" description="The percent progress." type="double">
            <type by_reference="false">double</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="448" package="PHP-client">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="443">
          <description>Returns the name.</description>
          <long-description/>
          <tag line="443" name="return" description="The name." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="460" package="PHP-client">
        <name>setName</name>
        <full_name>setName</full_name>
        <docblock line="453">
          <description>Sets the name.</description>
          <long-description/>
          <tag line="453" name="param" description="The new name." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="453" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="460">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="488" package="PHP-client">
        <name>getSample</name>
        <full_name>getSample</full_name>
        <docblock line="483">
          <description>Returns the sample.</description>
          <long-description/>
          <tag line="483" name="return" description="The sample." type="double">
            <type by_reference="false">double</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="499" package="PHP-client">
        <name>getStatus</name>
        <full_name>getStatus</full_name>
        <docblock line="493">
          <description>Returns the status.</description>
          <long-description>&lt;p&gt;To refresh this from the server call
reloadData().&lt;/p&gt;</long-description>
          <tag line="493" name="return" description="The status." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="511" package="PHP-client">
        <name>prepare</name>
        <full_name>prepare</full_name>
        <docblock line="504">
          <description>Call the DataSift API to prepare this historic query.</description>
          <long-description/>
          <tag line="504" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="504" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="504" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="571" package="PHP-client">
        <name>start</name>
        <full_name>start</full_name>
        <docblock line="564">
          <description>Start this historic query.</description>
          <long-description/>
          <tag line="564" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="564" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="564" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="613" package="PHP-client">
        <name>stop</name>
        <full_name>stop</full_name>
        <docblock line="606">
          <description>Stop this historic query.</description>
          <long-description/>
          <tag line="606" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="606" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="606" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="655" package="PHP-client">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="648">
          <description>Delete this historic query.</description>
          <long-description/>
          <tag line="648" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="648" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="648" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="696" package="PHP-client">
        <name>getPushSubscriptions</name>
        <full_name>getPushSubscriptions</full_name>
        <docblock line="691">
          <description>Get a page of push subscriptions for this historic query, where each
page contains up to $per_page items.</description>
          <long-description>&lt;p&gt;Results will be returned in the
order requested.&lt;/p&gt;</long-description>
        </docblock>
        <argument line="696">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="696">
          <name>$page</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="696">
          <name>$per_page</name>
          <default>20</default>
          <type/>
        </argument>
        <argument line="696">
          <name>$order_by</name>
          <default>self::ORDERBY_CREATED_AT</default>
          <type/>
        </argument>
        <argument line="696">
          <name>$order_dir</name>
          <default>self::ORDERDIR_ASC</default>
          <type/>
        </argument>
        <argument line="696">
          <name>$include_finished</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="65" code="50019">No short description for property $_user</critical>
      <critical line="70" code="50019">No short description for property $_playback_id</critical>
      <critical line="75" code="50019">No short description for property $_dpus</critical>
      <critical line="80" code="50019">No short description for property $_availability</critical>
      <critical line="85" code="50019">No short description for property $_hash</critical>
      <critical line="90" code="50019">No short description for property $_start</critical>
      <critical line="95" code="50019">No short description for property $_end</critical>
      <critical line="100" code="50019">No short description for property $_created_at</critical>
      <critical line="105" code="50019">No short description for property $_sample</critical>
      <critical line="110" code="50019">No short description for property $_sources</critical>
      <critical line="115" code="50019">No short description for property $_name</critical>
      <critical line="120" code="50019">No short description for property $_status</critical>
      <critical line="125" code="50019">No short description for property $_progress</critical>
      <critical line="130" code="50019">No short description for property $_volume_info</critical>
      <critical line="135" code="50019">No short description for property $_deleted</critical>
      <error line="33" code="50010">No DocBlock was found for method listHistorics()</error>
      <error line="691" code="50015">Argument $user is missing from the Docblock of getPushSubscriptions()</error>
      <error line="691" code="50015">Argument $page is missing from the Docblock of getPushSubscriptions()</error>
      <error line="691" code="50015">Argument $per_page is missing from the Docblock of getPushSubscriptions()</error>
      <error line="691" code="50015">Argument $order_by is missing from the Docblock of getPushSubscriptions()</error>
      <error line="691" code="50015">Argument $order_dir is missing from the Docblock of getPushSubscriptions()</error>
      <error line="691" code="50015">Argument $include_finished is missing from the Docblock of getPushSubscriptions()</error>
    </parse_markers>
  </file>
  <file path="lib/DataSift/Push/Definition.php" hash="87e7ed94e341882f8747e2aa23421649" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="PHP-client">
      <extends/>
      <name>DataSift_Push_Definition</name>
      <full_name>\DataSift_Push_Definition</full_name>
      <docblock line="17">
        <description>The DataSift_Push_Definition class defines a push endpoint.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
      </docblock>
      <constant namespace="global" line="31" package="PHP-client">
        <name>OUTPUT_PARAMS_PREFIX</name>
        <full_name>OUTPUT_PARAMS_PREFIX</full_name>
        <value>'output_params.'</value>
        <docblock line="28">
          <description>The prefix to be used when passing the output_params to API calls.</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="37" namespace="global" package="Default">
        <name>$_user</name>
        <default>null</default>
        <docblock line="33">
          <description>The user that owns this push definition.</description>
          <long-description/>
          <tag line="33" name="var" description="" type="\DataSift_User">
            <type by_reference="false">\DataSift_User</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="44" namespace="global" package="Default">
        <name>$_initial_status</name>
        <default>''</default>
        <docblock line="39">
          <description>An initial status for push subscriptions.</description>
          <long-description/>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="see" description="\PushSubscription::STATUS_*" refers="\PushSubscription::STATUS_*"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" namespace="global" package="Default">
        <name>$_output_type</name>
        <default>''</default>
        <docblock line="46">
          <description>The output_type of this push definition.</description>
          <long-description/>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="global" package="Default">
        <name>$_output_params</name>
        <default>array()</default>
        <docblock line="52">
          <description>The output parameters.</description>
          <long-description/>
          <tag line="52" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="PHP-client">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="58">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;Takes the user creating the object.&lt;/p&gt;</long-description>
          <tag line="58" name="param" description="The user creating this object." type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$user</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="PHP-client">
        <name>getInitialStatus</name>
        <full_name>getInitialStatus</full_name>
        <docblock line="71">
          <description>Get the initial status for subscriptions.</description>
          <long-description/>
          <tag line="71" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="see" description="\PushSubscription.STATUS_*" refers="\PushSubscription.STATUS_*"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="PHP-client">
        <name>setInitialStatus</name>
        <full_name>setInitialStatus</full_name>
        <docblock line="82">
          <description>Set the initial status for subscriptions.</description>
          <long-description/>
          <tag line="82" name="param" description="The initial status." type="string" variable="$status">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="see" description="\PushSubscription.STATUS_*" refers="\PushSubscription.STATUS_*"/>
        </docblock>
        <argument line="88">
          <name>$status</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="PHP-client">
        <name>getOutputType</name>
        <full_name>getOutputType</full_name>
        <docblock line="93">
          <description>Get the output type.</description>
          <long-description/>
          <tag line="93" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="PHP-client">
        <name>setOutputType</name>
        <full_name>setOutputType</full_name>
        <docblock line="103">
          <description>Set the output type.</description>
          <long-description/>
          <tag line="103" name="param" description="The output type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="PHP-client">
        <name>setOutputParam</name>
        <full_name>setOutputParam</full_name>
        <docblock line="113">
          <description>Set an output parameter.</description>
          <long-description/>
          <tag line="113" name="param" description="The output parameter to set." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="113" name="param" description="The value to set it to." type="string" variable="$val">
            <type by_reference="false">string</type>
          </tag>
          <tag line="113" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="120">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="131" package="PHP-client">
        <name>getOutputParam</name>
        <full_name>getOutputParam</full_name>
        <docblock line="125">
          <description>Get an output parameter.</description>
          <long-description/>
          <tag line="125" name="param" description="The parameter to get." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="PHP-client">
        <name>getOutputParams</name>
        <full_name>getOutputParams</full_name>
        <docblock line="139">
          <description>Get all of the output parameters.</description>
          <long-description/>
          <tag line="139" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="PHP-client">
        <name>validate</name>
        <full_name>validate</full_name>
        <docblock line="149">
          <description>Validate the output type and parameters with the DataSift API.</description>
          <long-description/>
          <tag line="149" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
          <tag line="149" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="181" package="PHP-client">
        <name>subscribeDefinition</name>
        <full_name>subscribeDefinition</full_name>
        <docblock line="171">
          <description>Subscribe this endpoint to a Definition.</description>
          <long-description/>
          <tag line="171" name="param" description="The definition to which to subscribe." type="\DataSift_Definition" variable="$definition">
            <type by_reference="false">\DataSift_Definition</type>
          </tag>
          <tag line="171" name="param" description="A name for this subscription." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="return" description="The new subscription." type="\DataSift_PushSubscription">
            <type by_reference="false">\DataSift_PushSubscription</type>
          </tag>
          <tag line="171" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="171" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
          <tag line="171" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$definition</name>
          <default/>
          <type/>
        </argument>
        <argument line="181">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="196" package="PHP-client">
        <name>subscribeStreamHash</name>
        <full_name>subscribeStreamHash</full_name>
        <docblock line="186">
          <description>Subscribe this endpoint to a stream hash.</description>
          <long-description/>
          <tag line="186" name="param" description="The has to which to subscribe." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="186" name="param" description="A name for this subscription." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="186" name="return" description="The new subscription." type="\DataSift_PushSubscription">
            <type by_reference="false">\DataSift_PushSubscription</type>
          </tag>
          <tag line="186" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="186" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="186" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
        <argument line="196">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="210" package="PHP-client">
        <name>subscribeHistoric</name>
        <full_name>subscribeHistoric</full_name>
        <docblock line="200">
          <description>Subscribe this endpoint to a Historic.</description>
          <long-description/>
          <tag line="200" name="param" description="The historic object to which to subscribe." type="\DataSift_Historic" variable="$historic">
            <type by_reference="false">\DataSift_Historic</type>
          </tag>
          <tag line="200" name="param" description="A name for this subscription." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="return" description="The new subscription." type="\DataSift_PushSubscription">
            <type by_reference="false">\DataSift_PushSubscription</type>
          </tag>
          <tag line="200" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="200" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
          <tag line="200" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
        </docblock>
        <argument line="210">
          <name>$historic</name>
          <default/>
          <type/>
        </argument>
        <argument line="210">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="225" package="PHP-client">
        <name>subscribeHistoricPlaybackId</name>
        <full_name>subscribeHistoricPlaybackId</full_name>
        <docblock line="215">
          <description>Subscribe this endpoint to a historic playback ID.</description>
          <long-description/>
          <tag line="215" name="param" description="The playback ID." type="string" variable="$playback_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="215" name="param" description="A name for this subscription." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="215" name="return" description="The new subscription." type="\DataSift_PushSubscription">
            <type by_reference="false">\DataSift_PushSubscription</type>
          </tag>
          <tag line="215" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="215" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="215" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$playback_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="225">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="243" package="PHP-client">
        <name>subscribe</name>
        <full_name>subscribe</full_name>
        <docblock line="230">
          <description>Subscribe this endpoint to a stream hash or historic playback ID.</description>
          <long-description>&lt;p&gt;Note
that this will activate the subscription if the initial status is set
to active.&lt;/p&gt;</long-description>
          <tag line="230" name="param" description="&quot;hash&quot; or &quot;playback_id&quot;" type="string" variable="$hash_type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="param" description="The hash or playback ID." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="param" description="A name for this subscription." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="return" description="The new subscription." type="\DataSift_PushSubscription">
            <type by_reference="false">\DataSift_PushSubscription</type>
          </tag>
          <tag line="230" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="230" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="230" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="243">
          <name>$hash_type</name>
          <default/>
          <type/>
        </argument>
        <argument line="243">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
        <argument line="243">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="lib/DataSift/Push/Subscription.php" hash="fdf4ca3cb0ca8891d68541d00abd8216" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="PHP-client">
      <extends>\DataSift_Push_Definition</extends>
      <name>DataSift_Push_Subscription</name>
      <full_name>\DataSift_Push_Subscription</full_name>
      <docblock line="17">
        <description>The DataSift_Push_Subscription class represents a push subscription.</description>
        <long-description/>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
      </docblock>
      <constant namespace="global" line="30" package="PHP-client">
        <name>HASH_TYPE_STREAM</name>
        <full_name>HASH_TYPE_STREAM</full_name>
        <value>'stream'</value>
        <docblock line="27">
          <description>Hash type constants.</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="31" package="PHP-client">
        <name>HASH_TYPE_HISTORIC</name>
        <full_name>HASH_TYPE_HISTORIC</full_name>
        <value>'historic'</value>
      </constant>
      <constant namespace="global" line="36" package="PHP-client">
        <name>STATUS_ACTIVE</name>
        <full_name>STATUS_ACTIVE</full_name>
        <value>'active'</value>
        <docblock line="33">
          <description>Status constants.</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="37" package="PHP-client">
        <name>STATUS_PAUSED</name>
        <full_name>STATUS_PAUSED</full_name>
        <value>'paused'</value>
      </constant>
      <constant namespace="global" line="38" package="PHP-client">
        <name>STATUS_STOPPED</name>
        <full_name>STATUS_STOPPED</full_name>
        <value>'stopped'</value>
      </constant>
      <constant namespace="global" line="39" package="PHP-client">
        <name>STATUS_FINISHING</name>
        <full_name>STATUS_FINISHING</full_name>
        <value>'finishing'</value>
      </constant>
      <constant namespace="global" line="40" package="PHP-client">
        <name>STATUS_FINISHED</name>
        <full_name>STATUS_FINISHED</full_name>
        <value>'finished'</value>
      </constant>
      <constant namespace="global" line="41" package="PHP-client">
        <name>STATUS_FAILED</name>
        <full_name>STATUS_FAILED</full_name>
        <value>'failed'</value>
      </constant>
      <constant namespace="global" line="42" package="PHP-client">
        <name>STATUS_DELETED</name>
        <full_name>STATUS_DELETED</full_name>
        <value>'deleted'</value>
      </constant>
      <constant namespace="global" line="47" package="PHP-client">
        <name>ORDERBY_ID</name>
        <full_name>ORDERBY_ID</full_name>
        <value>'id'</value>
        <docblock line="44">
          <description>Order by constants.</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="48" package="PHP-client">
        <name>ORDERBY_CREATED_AT</name>
        <full_name>ORDERBY_CREATED_AT</full_name>
        <value>'created_at'</value>
      </constant>
      <constant namespace="global" line="49" package="PHP-client">
        <name>ORDERBY_REQUEST_TIME</name>
        <full_name>ORDERBY_REQUEST_TIME</full_name>
        <value>'request_time'</value>
      </constant>
      <constant namespace="global" line="54" package="PHP-client">
        <name>ORDERDIR_ASC</name>
        <full_name>ORDERDIR_ASC</full_name>
        <value>'asc'</value>
        <docblock line="51">
          <description>Order direction constants.</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="55" package="PHP-client">
        <name>ORDERDIR_DESC</name>
        <full_name>ORDERDIR_DESC</full_name>
        <value>'desc'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="216" namespace="global" package="Default">
        <name>$_id</name>
        <default>''</default>
        <docblock line="213">
          <description/>
          <long-description/>
          <tag line="213" name="var" description="The subscription ID." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="221" namespace="global" package="Default">
        <name>$_created_at</name>
        <default>null</default>
        <docblock line="218">
          <description/>
          <long-description/>
          <tag line="218" name="var" description="The timestamp when this subscription was created." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="226" namespace="global" package="Default">
        <name>$_name</name>
        <default>''</default>
        <docblock line="223">
          <description/>
          <long-description/>
          <tag line="223" name="var" description="The name of this subscription." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="231" namespace="global" package="Default">
        <name>$_status</name>
        <default>''</default>
        <docblock line="228">
          <description/>
          <long-description/>
          <tag line="228" name="var" description="The current status of this subscription." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="236" namespace="global" package="Default">
        <name>$_hash</name>
        <default>''</default>
        <docblock line="233">
          <description/>
          <long-description/>
          <tag line="233" name="var" description="The hash to which this subscription is subscribed." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="241" namespace="global" package="Default">
        <name>$_hash_type</name>
        <default>''</default>
        <docblock line="238">
          <description/>
          <long-description/>
          <tag line="238" name="var" description="&quot;stream&quot; or &quot;historic&quot;" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="246" namespace="global" package="Default">
        <name>$_last_request</name>
        <default>null</default>
        <docblock line="243">
          <description/>
          <long-description/>
          <tag line="243" name="var" description="The timestamp of the last push request." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="251" namespace="global" package="Default">
        <name>$_last_success</name>
        <default>null</default>
        <docblock line="248">
          <description/>
          <long-description/>
          <tag line="248" name="var" description="The timestamp of the last successful push request." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="257" namespace="global" package="Default">
        <name>$_deleted</name>
        <default>false</default>
        <docblock line="253">
          <description/>
          <long-description/>
          <tag line="253" name="var" description="True if this subscription has been deleted (becomes read-only)." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="67" package="PHP-client">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="57">
          <description>Get a push subscription by ID.</description>
          <long-description/>
          <tag line="57" name="param" description="The user who owns the subscription." type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
          <tag line="57" name="param" description="The subscription ID." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="return" description="" type="\DataSift_Push_Subscription">
            <type by_reference="false">\DataSift_Push_Subscription</type>
          </tag>
          <tag line="57" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="57" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
          <tag line="57" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="67">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="90" package="PHP-client">
        <name>listSubscriptions</name>
        <full_name>listSubscriptions</full_name>
        <docblock line="73">
          <description>Get a page of push subscriptions in the given user's account, where
each page contains up to per_page items.</description>
          <long-description>&lt;p&gt;Results will be ordered
according to the supplied ordering parameters.&lt;/p&gt;</long-description>
          <tag line="73" name="param" description="The user." type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
          <tag line="73" name="param" description="The page number to fetch." type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="73" name="param" description="The number of items per page." type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="73" name="param" description="The field on which to order the results." type="string" variable="$order_by">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="param" description="The direction of the ordering." type="string" variable="$order_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="param" description="True to include subscriptions against&#10;                                       finished historic queries." type="boolean" variable="$include_finished">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="73" name="return" description="Of DataSift_Push_Subscription objects." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="73" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="73" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="73" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="90">
          <name>$page</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="90">
          <name>$per_page</name>
          <default>20</default>
          <type/>
        </argument>
        <argument line="90">
          <name>$order_by</name>
          <default>self::ORDERBY_CREATED_AT</default>
          <type/>
        </argument>
        <argument line="90">
          <name>$order_dir</name>
          <default>self::ORDERDIR_ASC</default>
          <type/>
        </argument>
        <argument line="90">
          <name>$include_finished</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="90">
          <name>$hash_type</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="90">
          <name>$hash</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="142" package="PHP-client">
        <name>listByStreamHash</name>
        <full_name>listByStreamHash</full_name>
        <docblock line="125">
          <description>Get a page of push subscriptions to the given stream hash, where
each page contains up to per_page items.</description>
          <long-description>&lt;p&gt;Results will be ordered
according to the supplied ordering parameters.&lt;/p&gt;</long-description>
          <tag line="125" name="param" description="The user." type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
          <tag line="125" name="param" description="The page number to fetch." type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="125" name="param" description="The number of items per page." type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="125" name="param" description="The field on which to order the results." type="string" variable="$order_by">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="param" description="The direction of the ordering." type="string" variable="$order_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="param" description="True to include subscriptions against&#10;                                       finished historic queries." type="boolean" variable="$include_finished">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="125" name="return" description="Of DataSift_Push_Subscription objects." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="125" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="125" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="125" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="142">
          <name>$hash</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="142">
          <name>$page</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="142">
          <name>$per_page</name>
          <default>20</default>
          <type/>
        </argument>
        <argument line="142">
          <name>$order_by</name>
          <default>self::ORDERBY_CREATED_AT</default>
          <type/>
        </argument>
        <argument line="142">
          <name>$order_dir</name>
          <default>self::ORDERDIR_ASC</default>
          <type/>
        </argument>
        <argument line="142">
          <name>$include_finished</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="142">
          <name>$hash_type</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="164" package="PHP-client">
        <name>listByPlaybackId</name>
        <full_name>listByPlaybackId</full_name>
        <docblock line="147">
          <description>Get a page of push subscriptions to the given stream playback_id, where
each page contains up to per_page items.</description>
          <long-description>&lt;p&gt;Results will be ordered
according to the supplied ordering parameters.&lt;/p&gt;</long-description>
          <tag line="147" name="param" description="The user." type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
          <tag line="147" name="param" description="The page number to fetch." type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="147" name="param" description="The number of items per page." type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="147" name="param" description="The field on which to order the results." type="string" variable="$order_by">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="param" description="The direction of the ordering." type="string" variable="$order_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="param" description="True to include subscriptions against&#10;                                       finished historic queries." type="boolean" variable="$include_finished">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="147" name="return" description="Of DataSift_Push_Subscription objects." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="147" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="147" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="147" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="164">
          <name>$playback_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="164">
          <name>$page</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="164">
          <name>$per_page</name>
          <default>20</default>
          <type/>
        </argument>
        <argument line="164">
          <name>$order_by</name>
          <default>self::ORDERBY_CREATED_AT</default>
          <type/>
        </argument>
        <argument line="164">
          <name>$order_dir</name>
          <default>self::ORDERDIR_ASC</default>
          <type/>
        </argument>
        <argument line="164">
          <name>$include_finished</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="164">
          <name>$hash_type</name>
          <default>false</default>
          <type/>
        </argument>
        <argument line="164">
          <name>$hash</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="183" package="PHP-client">
        <name>getLogs</name>
        <full_name>getLogs</full_name>
        <docblock line="169">
          <description>Page through recent push subscription log entries, specifying the sort
order.</description>
          <long-description/>
          <tag line="169" name="param" description="The user making the request." type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
          <tag line="169" name="param" description="Which page to fetch." type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="169" name="param" description="Based on this page size." type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="169" name="param" description="Which field to sort by." type="string" variable="$order_by">
            <type by_reference="false">string</type>
          </tag>
          <tag line="169" name="param" description="In asc[ending] or desc[ending] order." type="string" variable="$order_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="169" name="return" description="Of LogEntry objects." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="169" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="169" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="169" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="183">
          <name>$page</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="183">
          <name>$per_page</name>
          <default>20</default>
          <type/>
        </argument>
        <argument line="183">
          <name>$order_by</name>
          <default>self::ORDERBY_REQUEST_TIME</default>
          <type/>
        </argument>
        <argument line="183">
          <name>$order_dir</name>
          <default>self::ORDERDIR_ASC</default>
          <type/>
        </argument>
        <argument line="183">
          <name>$id</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="266" package="PHP-client">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="259">
          <description>Construct a DataSift_Push_Subscription object from an array.</description>
          <long-description/>
          <tag line="259" name="param" description="The user that owns this subscription." type="\DataSift_User" variable="$user">
            <type by_reference="false">\DataSift_User</type>
          </tag>
          <tag line="259" name="param" description="The JSON object containing the subscription details." type="array" variable="$json">
            <type by_reference="false">array</type>
          </tag>
          <tag line="259" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$user</name>
          <default/>
          <type/>
        </argument>
        <argument line="266">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="278" package="PHP-client">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="272">
          <description>Extract data from an array.</description>
          <long-description/>
          <tag line="272" name="param" description="An array containing the subscription data." type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="272" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="341" package="PHP-client">
        <name>parseOutputParams</name>
        <full_name>parseOutputParams</full_name>
        <docblock line="333">
          <description>Recursive method to parse the output_params as received from the API
into the flattened, dot-notation used by the client libraries.</description>
          <long-description/>
          <tag line="333" name="param" description="The parameters to parse." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="333" name="param" description="The current key prefix." type="string" variable="$prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="333" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="341">
          <name>$params</name>
          <default/>
          <type/>
        </argument>
        <argument line="341">
          <name>$prefix</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="361" package="PHP-client">
        <name>reload</name>
        <full_name>reload</full_name>
        <docblock line="354">
          <description>Re-fetch this subscription from the API.</description>
          <long-description/>
          <tag line="354" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="354" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="354" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="371" package="PHP-client">
        <name>getId</name>
        <full_name>getId</full_name>
        <docblock line="366">
          <description>Get the subscription ID.</description>
          <long-description/>
          <tag line="366" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="381" package="PHP-client">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="376">
          <description>Get the subscription name.</description>
          <long-description/>
          <tag line="376" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="394" package="PHP-client">
        <name>setOutputParam</name>
        <full_name>setOutputParam</full_name>
        <docblock line="386">
          <description>Set an output parameter.</description>
          <long-description>&lt;p&gt;Checks to see if the subscription has been
deleted, and if not calls the base class to set the parameter.&lt;/p&gt;</long-description>
          <tag line="386" name="param" description="The output parameter to set." type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="386" name="param" description="The value to which to set it." type="string" variable="$val">
            <type by_reference="false">string</type>
          </tag>
          <tag line="386" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="394">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="394">
          <name>$val</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="407" package="PHP-client">
        <name>getCreatedAt</name>
        <full_name>getCreatedAt</full_name>
        <docblock line="402">
          <description>Get the timestamp when this subscription was created.</description>
          <long-description/>
          <tag line="402" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="419" package="PHP-client">
        <name>getStatus</name>
        <full_name>getStatus</full_name>
        <docblock line="412">
          <description>Get the current status of this subscription.</description>
          <long-description>&lt;p&gt;Make sure you call reload
to get the latest data for this subscription first.&lt;/p&gt;</long-description>
          <tag line="412" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="412" name="see" description="\self::STATUS_*" refers="\self::STATUS_*"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="429" package="PHP-client">
        <name>isDeleted</name>
        <full_name>isDeleted</full_name>
        <docblock line="424">
          <description>Returns true if this subscription has been deleted.</description>
          <long-description/>
          <tag line="424" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="439" package="PHP-client">
        <name>getHashType</name>
        <full_name>getHashType</full_name>
        <docblock line="434">
          <description>Get the hash type to which this subscription is subscribed.</description>
          <long-description/>
          <tag line="434" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="449" package="PHP-client">
        <name>getHash</name>
        <full_name>getHash</full_name>
        <docblock line="444">
          <description>Get the hash or playback ID to which this subscription is subscribed.</description>
          <long-description/>
          <tag line="444" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="458" package="PHP-client">
        <name>getOutputType</name>
        <full_name>getOutputType</full_name>
        <docblock line="453">
          <description>Get the output type.</description>
          <long-description/>
          <tag line="453" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="467" package="PHP-client">
        <name>getLastRequest</name>
        <full_name>getLastRequest</full_name>
        <docblock line="462">
          <description>Get the timestamp of the last push request.</description>
          <long-description/>
          <tag line="462" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="476" package="PHP-client">
        <name>getLastSuccess</name>
        <full_name>getLastSuccess</full_name>
        <docblock line="471">
          <description>Get the timestamp of the last successful push request.</description>
          <long-description/>
          <tag line="471" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="487" package="PHP-client">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="480">
          <description>Save changes to the name and output_parameters of this subscription.</description>
          <long-description/>
          <tag line="480" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="480" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="480" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="506" package="PHP-client">
        <name>pause</name>
        <full_name>pause</full_name>
        <docblock line="499">
          <description>Pause this subscription.</description>
          <long-description/>
          <tag line="499" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="499" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="499" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="518" package="PHP-client">
        <name>resume</name>
        <full_name>resume</full_name>
        <docblock line="511">
          <description>Resume this subscription.</description>
          <long-description/>
          <tag line="511" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="511" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="511" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="530" package="PHP-client">
        <name>stop</name>
        <full_name>stop</full_name>
        <docblock line="523">
          <description>Stop this subscription.</description>
          <long-description/>
          <tag line="523" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="523" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="523" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="541" package="PHP-client">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="535">
          <description>Delete this subscription.</description>
          <long-description/>
          <tag line="535" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="535" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="561" package="PHP-client">
        <name>getLog</name>
        <full_name>getLog</full_name>
        <docblock line="549">
          <description>Get a page of the log for this subscription order as specified.</description>
          <long-description/>
          <tag line="549" name="param" description="The page to get." type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="549" name="param" description="The number of entries per page." type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="549" name="param" description="By which field to order the entries." type="string" variable="$order_by">
            <type by_reference="false">string</type>
          </tag>
          <tag line="549" name="param" description="The direction of the sorting (&quot;asc&quot; or &quot;desc&quot;)." type="string" variable="$order_dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="549" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="549" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="549" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="549" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="561">
          <name>$page</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="561">
          <name>$per_page</name>
          <default>20</default>
          <type/>
        </argument>
        <argument line="561">
          <name>$order_by</name>
          <default>self::ORDERBY_REQUEST_TIME</default>
          <type/>
        </argument>
        <argument line="561">
          <name>$order_dir</name>
          <default>self::ORDERDIR_DESC</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="73" code="50015">Argument $hash_type is missing from the Docblock of listSubscriptions()</error>
      <error line="73" code="50015">Argument $hash is missing from the Docblock of listSubscriptions()</error>
      <error line="125" code="50014">Name of argument $hash does not match with the DocBlock's name $page in listByStreamHash()</error>
      <error line="125" code="50014">Name of argument $page does not match with the DocBlock's name $per_page in listByStreamHash()</error>
      <error line="125" code="50014">Name of argument $per_page does not match with the DocBlock's name $order_by in listByStreamHash()</error>
      <error line="125" code="50014">Name of argument $order_by does not match with the DocBlock's name $order_dir in listByStreamHash()</error>
      <error line="125" code="50014">Name of argument $order_dir does not match with the DocBlock's name $include_finished in listByStreamHash()</error>
      <error line="125" code="50015">Argument $include_finished is missing from the Docblock of listByStreamHash()</error>
      <error line="125" code="50015">Argument $hash_type is missing from the Docblock of listByStreamHash()</error>
      <error line="147" code="50014">Name of argument $playback_id does not match with the DocBlock's name $page in listByPlaybackId()</error>
      <error line="147" code="50014">Name of argument $page does not match with the DocBlock's name $per_page in listByPlaybackId()</error>
      <error line="147" code="50014">Name of argument $per_page does not match with the DocBlock's name $order_by in listByPlaybackId()</error>
      <error line="147" code="50014">Name of argument $order_by does not match with the DocBlock's name $order_dir in listByPlaybackId()</error>
      <error line="147" code="50014">Name of argument $order_dir does not match with the DocBlock's name $include_finished in listByPlaybackId()</error>
      <error line="147" code="50015">Argument $include_finished is missing from the Docblock of listByPlaybackId()</error>
      <error line="147" code="50015">Argument $hash_type is missing from the Docblock of listByPlaybackId()</error>
      <error line="147" code="50015">Argument $hash is missing from the Docblock of listByPlaybackId()</error>
      <error line="169" code="50015">Argument $id is missing from the Docblock of getLogs()</error>
      <error line="259" code="50014">Name of argument $data does not match with the DocBlock's name $json in __construct()</error>
      <notice line="259" code="50013">Parameter $json could not be found in __construct()</notice>
    </parse_markers>
  </file>
  <file path="lib/DataSift/Push/LogEntry.php" hash="ce0cf1f9a57d51caeabf7e2ce711a11e" package="Default"/>
  <file path="lib/DataSift/User.php" hash="a06d3dfea96f3a160d49654c48ba5fb0" package="PHP-client">
    <docblock line="2">
      <description>DataSift client</description>
      <long-description>&lt;p&gt;This software is the intellectual property of MediaSift Ltd., and is covered
by retained intellectual property rights, including copyright.
Distribution of this software is strictly forbidden under the terms of this license.&lt;/p&gt;</long-description>
      <tag line="2" name="category" description="DataSift"/>
      <tag line="2" name="package" description="PHP-client"/>
      <tag line="2" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
      <tag line="2" name="copyright" description="2011 MediaSift Ltd."/>
      <tag line="2" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
      <tag line="2" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="29" package="PHP-client">
      <extends/>
      <name>DataSift_User</name>
      <full_name>\DataSift_User</full_name>
      <docblock line="17">
        <description>The DataSift_User class represents a user of the API.</description>
        <long-description>&lt;p&gt;Applications should
start their API interactions by creating an instance of this class. Once
initialised it provides factory methods for all of the functionality in
the API.&lt;/p&gt;</long-description>
        <tag line="17" name="category" description="DataSift"/>
        <tag line="17" name="package" description="PHP-client"/>
        <tag line="17" name="author" description="Stuart Dallas &lt;stuart@3ft9.com&gt;"/>
        <tag line="17" name="license" description="http://www.debian.org/misc/bsd.license BSD License (3 Clause)"/>
        <tag line="17" name="link" description="http://www.mediasift.com" link="http://www.mediasift.com"/>
      </docblock>
      <constant namespace="global" line="31" package="PHP-client">
        <name>USER_AGENT</name>
        <full_name>USER_AGENT</full_name>
        <value>'DataSiftPHP/2.1.0'</value>
      </constant>
      <constant namespace="global" line="32" package="PHP-client">
        <name>API_BASE_URL</name>
        <full_name>API_BASE_URL</full_name>
        <value>'api.datasift.com/'</value>
      </constant>
      <constant namespace="global" line="33" package="PHP-client">
        <name>STREAM_BASE_URL</name>
        <full_name>STREAM_BASE_URL</full_name>
        <value>'stream.datasift.com/'</value>
      </constant>
      <property final="false" static="false" visibility="protected" line="38" namespace="global" package="Default">
        <name>$_username</name>
        <default>''</default>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" namespace="global" package="Default">
        <name>$_api_key</name>
        <default>''</default>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" namespace="global" package="Default">
        <name>$_use_ssl</name>
        <default>true</default>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" namespace="global" package="Default">
        <name>$_rate_limit</name>
        <default>-1</default>
        <docblock line="50">
          <description>Stores the X-RateLimit-Limit value from the last API call.</description>
          <long-description/>
          <tag line="50" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="62" namespace="global" package="Default">
        <name>$_rate_limit_remaining</name>
        <default>-1</default>
        <docblock line="57">
          <description>Stores the X-RateLimit-Remaining value from the last API call.</description>
          <long-description/>
          <tag line="57" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="69" namespace="global" package="Default">
        <name>$_api_client</name>
        <default>'DataSift_ApiClient'</default>
        <docblock line="64">
          <description>The class to use as the API client.</description>
          <long-description/>
          <tag line="64" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="PHP-client">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="71">
          <description>Constructor.</description>
          <long-description>&lt;p&gt;A username and API key are required when constructing an
instance of this class.&lt;/p&gt;</long-description>
          <tag line="71" name="param" description="The user's username." type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="The user's API key." type="string" variable="$api_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
        <argument line="80">
          <name>$api_key</name>
          <default/>
          <type/>
        </argument>
        <argument line="80">
          <name>$use_ssl</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="103" package="PHP-client">
        <name>setApiClient</name>
        <full_name>setApiClient</full_name>
        <docblock line="95">
          <description>Set the class to use when calling the API</description>
          <long-description/>
          <tag line="95" name="param" description="The class to use." type="string" variable="$api_client">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="95" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$api_client</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="PHP-client">
        <name>getUsername</name>
        <full_name>getUsername</full_name>
        <docblock line="111">
          <description>Returns the username.</description>
          <long-description/>
          <tag line="111" name="return" description="The username." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="126" package="PHP-client">
        <name>getAPIKey</name>
        <full_name>getAPIKey</full_name>
        <docblock line="121">
          <description>Returns the API key.</description>
          <long-description/>
          <tag line="121" name="return" description="The API key." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="PHP-client">
        <name>enableSSL</name>
        <full_name>enableSSL</full_name>
        <docblock line="131">
          <description>Set whether stream connections should use SSL.</description>
          <long-description/>
          <tag line="131" name="param" description="Set to true to enable SSL." type="bool" variable="$enable_ssl">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="131" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="138">
          <name>$use_ssl</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="148" package="PHP-client">
        <name>useSSL</name>
        <full_name>useSSL</full_name>
        <docblock line="143">
          <description>Returns whether SSL should be used where supported.</description>
          <long-description/>
          <tag line="143" name="return" description="True if SSL should be used." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="157" package="PHP-client">
        <name>getRateLimit</name>
        <full_name>getRateLimit</full_name>
        <docblock line="152">
          <description>Returns the rate limit returned by the last API call.</description>
          <long-description/>
          <tag line="152" name="return" description="The rate limit." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="167" package="PHP-client">
        <name>getRateLimitRemaining</name>
        <full_name>getRateLimitRemaining</full_name>
        <docblock line="162">
          <description>Returns the rate limit remaining returned by the last API call.</description>
          <long-description/>
          <tag line="162" name="return" description="The rate limit remaining." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="181" package="PHP-client">
        <name>getUsage</name>
        <full_name>getUsage</full_name>
        <docblock line="172">
          <description>Returns the usage data for this user.</description>
          <long-description/>
          <tag line="172" name="param" description="Either 'hour' or 'day'." type="string" variable="$period">
            <type by_reference="false">string</type>
          </tag>
          <tag line="172" name="return" description="The usage data from the API." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="172" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="172" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$period</name>
          <default>'hour'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="196" package="PHP-client">
        <name>createDefinition</name>
        <full_name>createDefinition</full_name>
        <docblock line="189">
          <description>Creates and returns an empty Definition object.</description>
          <long-description/>
          <tag line="189" name="param" description="Optional definition with which to prime the object." type="string" variable="$definition">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="return" description="A definition object tied to this user." type="\DataSift_Definition">
            <type by_reference="false">\DataSift_Definition</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$definition</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="214" package="PHP-client">
        <name>createHistoric</name>
        <full_name>createHistoric</full_name>
        <docblock line="201">
          <description>Create a historic query based on a stream hash.</description>
          <long-description/>
          <tag line="201" name="param" description="The stream hash." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="param" description="The timestamp from which to start the query." type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="201" name="param" description="The timestamp at which to end the query." type="int" variable="$end">
            <type by_reference="false">int</type>
          </tag>
          <tag line="201" name="param" description="An array of sources required." type="array" variable="$sources">
            <type by_reference="false">array</type>
          </tag>
          <tag line="201" name="param" description="A friendly name for this query." type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="param" description="An optional sample rate for this query." type="float" variable="$name">
            <type by_reference="false">float</type>
          </tag>
          <tag line="201" name="return" description="" type="\DataSift_Historic">
            <type by_reference="false">\DataSift_Historic</type>
          </tag>
          <tag line="201" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
        </docblock>
        <argument line="214">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
        <argument line="214">
          <name>$start</name>
          <default/>
          <type/>
        </argument>
        <argument line="214">
          <name>$end</name>
          <default/>
          <type/>
        </argument>
        <argument line="214">
          <name>$sources</name>
          <default/>
          <type/>
        </argument>
        <argument line="214">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="214">
          <name>$sample</name>
          <default>\DataSift_Historic::DEFAULT_SAMPLE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="229" package="PHP-client">
        <name>getHistoric</name>
        <full_name>getHistoric</full_name>
        <docblock line="219">
          <description>Get an existing historic from the API.</description>
          <long-description/>
          <tag line="219" name="param" description="The historic playback ID." type="string" variable="$playback_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="219" name="return" description="" type="\DataSift_Historic">
            <type by_reference="false">\DataSift_Historic</type>
          </tag>
          <tag line="219" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="219" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="219" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$playback_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="245" package="PHP-client">
        <name>listHistorics</name>
        <full_name>listHistorics</full_name>
        <docblock line="234">
          <description>Get a list of Historics queries in your account.</description>
          <long-description/>
          <tag line="234" name="param" description="The page number to get." type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="234" name="param" description="The number of items per page." type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="234" name="return" description="Of DataSift_Historic objects." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="234" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="234" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="234" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="245">
          <name>$page</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="245">
          <name>$per_page</name>
          <default>20</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="255" package="PHP-client">
        <name>createPushDefinition</name>
        <full_name>createPushDefinition</full_name>
        <docblock line="250">
          <description>Creates and returns a new Push_Definition object.</description>
          <long-description/>
          <tag line="250" name="return" description="" type="\DataSift_Push_Definition">
            <type by_reference="false">\DataSift_Push_Definition</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="271" package="PHP-client">
        <name>getConsumer</name>
        <full_name>getConsumer</full_name>
        <docblock line="260">
          <description>Returns a DataSift_StreamConsumer-derived object for the given hash,
for the given type.</description>
          <long-description/>
          <tag line="260" name="param" description="The consumer type for which to construct a consumer." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="260" name="param" description="The hash to be consumed." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="260" name="return" description="The consumer object." type="\DataSift_StreamConsumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="260" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="260" name="see" description="\DataSift_StreamConsumer" refers="\DataSift_StreamConsumer"/>
        </docblock>
        <argument line="271">
          <name>$type</name>
          <default>\DataSift_StreamConsumer::TYPE_HTTP</default>
          <type/>
        </argument>
        <argument line="271">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
        <argument line="271">
          <name>$eventHandler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="287" package="PHP-client">
        <name>getMultiConsumer</name>
        <full_name>getMultiConsumer</full_name>
        <docblock line="276">
          <description>Returns a DataSift_StreamConsumer-derived object for the given hashes,
for the given type.</description>
          <long-description/>
          <tag line="276" name="param" description="The consumer type for which to construct a consumer." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="276" name="param" description="An array containing hashes and/or Definition objects to be consumed." type="string" variable="$hashes">
            <type by_reference="false">string</type>
          </tag>
          <tag line="276" name="return" description="The consumer object." type="\DataSift_StreamConsumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="276" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="276" name="see" description="\DataSift_StreamConsumer" refers="\DataSift_StreamConsumer"/>
        </docblock>
        <argument line="287">
          <name>$type</name>
          <default>\DataSift_StreamConsumer::TYPE_HTTP</default>
          <type/>
        </argument>
        <argument line="287">
          <name>$hashes</name>
          <default/>
          <type/>
        </argument>
        <argument line="287">
          <name>$eventHandler</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="301" package="PHP-client">
        <name>getPushSubscription</name>
        <full_name>getPushSubscription</full_name>
        <docblock line="292">
          <description>Get a single push subscription.</description>
          <long-description/>
          <tag line="292" name="param" description="The ID of the subscription to fetch." type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="292" name="return" description="" type="\DataSift_Push_Subscription">
            <type by_reference="false">\DataSift_Push_Subscription</type>
          </tag>
          <tag line="292" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="292" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
          <tag line="292" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
        </docblock>
        <argument line="301">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="314" package="PHP-client">
        <name>listPushSubscriptions</name>
        <full_name>listPushSubscriptions</full_name>
        <docblock line="306">
          <description>Get a list of push subscriptions in your account.</description>
          <long-description/>
          <tag line="306" name="return" description="Of DataSift_Push_Subscription objects." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="306" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="306" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="306" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
        </docblock>
        <argument line="314">
          <name>$page</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="314">
          <name>$per_page</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="314">
          <name>$order_by</name>
          <default>\DataSift_Push_Subscription::ORDERBY_CREATED_AT</default>
          <type/>
        </argument>
        <argument line="314">
          <name>$order_dir</name>
          <default>\DataSift_Push_Subscription::ORDERDIR_ASC</default>
          <type/>
        </argument>
        <argument line="314">
          <name>$include_finished</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="332" package="PHP-client">
        <name>getPushSubscriptionLogs</name>
        <full_name>getPushSubscriptionLogs</full_name>
        <docblock line="319">
          <description>Page throu gh recent push subscription log entries, specifying the sort
order.</description>
          <long-description/>
          <tag line="319" name="param" description="page      Which page to fetch." type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="319" name="param" description="per_page  Based on this page size." type="int" variable="$per_page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="319" name="param" description="order_by  Which field to sort by." type="String" variable="$order_by">
            <type by_reference="false">String</type>
          </tag>
          <tag line="319" name="param" description="order_dir In asc[ending] or desc[ending] order." type="String" variable="$order_dir">
            <type by_reference="false">String</type>
          </tag>
          <tag line="319" name="return" description="" type="\ArrayList&lt;LogEntry&gt;">
            <type by_reference="false">\ArrayList&lt;LogEntry&gt;</type>
          </tag>
          <tag line="319" name="throws" description="" type="\DataSift_Exception_AccessDenied">
            <type by_reference="false">\DataSift_Exception_AccessDenied</type>
          </tag>
          <tag line="319" name="throws" description="" type="\DataSift_Exception_InvalidData">
            <type by_reference="false">\DataSift_Exception_InvalidData</type>
          </tag>
          <tag line="319" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
        </docblock>
        <argument line="332">
          <name>$page</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="332">
          <name>$per_page</name>
          <default>100</default>
          <type/>
        </argument>
        <argument line="332">
          <name>$order_by</name>
          <default>\DataSift_Push_Subscription::ORDERBY_REQUEST_TIME</default>
          <type/>
        </argument>
        <argument line="332">
          <name>$order_dir</name>
          <default>\DataSift_Push_Subscription::ORDERDIR_DESC</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="342" package="PHP-client">
        <name>getUserAgent</name>
        <full_name>getUserAgent</full_name>
        <docblock line="337">
          <description>Returns the user agent this library should use for all API calls.</description>
          <long-description/>
          <tag line="337" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="357" package="PHP-client">
        <name>callAPI</name>
        <full_name>callAPI</full_name>
        <docblock line="347">
          <description>Make a call to a DataSift API endpoint.</description>
          <long-description/>
          <tag line="347" name="param" description="The endpoint of the API call." type="string" variable="$endpoint">
            <type by_reference="false">string</type>
          </tag>
          <tag line="347" name="param" description="The parameters to be passed along with the request." type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="347" name="return" description="The response from the server." type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="347" name="throws" description="" type="\DataSift_Exception_APIError">
            <type by_reference="false">\DataSift_Exception_APIError</type>
          </tag>
          <tag line="347" name="throws" description="" type="\DataSift_Exception_RateLimitExceeded">
            <type by_reference="false">\DataSift_Exception_RateLimitExceeded</type>
          </tag>
        </docblock>
        <argument line="357">
          <name>$endpoint</name>
          <default/>
          <type/>
        </argument>
        <argument line="357">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="35" code="50019">No short description for property $_username</critical>
      <critical line="40" code="50019">No short description for property $_api_key</critical>
      <critical line="45" code="50019">No short description for property $_use_ssl</critical>
      <error line="71" code="50015">Argument $use_ssl is missing from the Docblock of __construct()</error>
      <error line="131" code="50014">Name of argument $use_ssl does not match with the DocBlock's name $enable_ssl in enableSSL()</error>
      <notice line="131" code="50013">Parameter $enable_ssl could not be found in enableSSL()</notice>
      <error line="201" code="50014">Name of argument $sample does not match with the DocBlock's name $name in createHistoric()</error>
      <error line="260" code="50015">Argument $eventHandler is missing from the Docblock of getConsumer()</error>
      <error line="276" code="50015">Argument $eventHandler is missing from the Docblock of getMultiConsumer()</error>
      <error line="306" code="50015">Argument $page is missing from the Docblock of listPushSubscriptions()</error>
      <error line="306" code="50015">Argument $per_page is missing from the Docblock of listPushSubscriptions()</error>
      <error line="306" code="50015">Argument $order_by is missing from the Docblock of listPushSubscriptions()</error>
      <error line="306" code="50015">Argument $order_dir is missing from the Docblock of listPushSubscriptions()</error>
      <error line="306" code="50015">Argument $include_finished is missing from the Docblock of listPushSubscriptions()</error>
    </parse_markers>
  </file>
  <file path="config.php" hash="b52cd8163288c1d29626bc28527c8751" package="Default">
    <constant namespace="global" line="3" package="Default">
      <name>USERNAME</name>
      <full_name>\USERNAME</full_name>
      <value>'&lt;your_username&gt;'</value>
    </constant>
    <constant namespace="global" line="4" package="Default">
      <name>API_KEY</name>
      <full_name>\API_KEY</full_name>
      <value>'&lt;your_api_key&gt;'</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file config.php</error>
    </parse_markers>
  </file>
  <file path="examples/historics/start.php" hash="3d87948ed702d6c7a99bc180e066f40b" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script starts Historics queries in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/historics/start.php</error>
    </parse_markers>
  </file>
  <file path="examples/historics/list.php" hash="867ec178891d2fe2eb43b7bdc1b6b98a" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script lists Historics queries in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/historics/list.php</error>
    </parse_markers>
  </file>
  <file path="examples/historics/delete.php" hash="13c4170b6ff434ead060f5f03a1e9ae6" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script starts Historics queries in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/historics/delete.php</error>
    </parse_markers>
  </file>
  <file path="examples/historics/env.php" hash="66ee1adbae5f3f660a1d79b74807e9cf" package="Default">
    <include line="7" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends/>
      <name>Env</name>
      <full_name>\Env</full_name>
      <docblock line="9">
        <description>This class is used by the Historics examples to remove the noise of
dealing with command line arguments.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$user</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$args</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="17">
          <name>$args</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>displayHistoricDetails</name>
        <full_name>displayHistoricDetails</full_name>
        <argument line="42">
          <name>$hist</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/historics/env.php</error>
      <error line="14" code="50018">No DocBlock was found for property $user</error>
      <error line="15" code="50018">No DocBlock was found for property $args</error>
      <error line="17" code="50010">No DocBlock was found for method __construct()</error>
      <error line="42" code="50010">No DocBlock was found for method displayHistoricDetails()</error>
    </parse_markers>
  </file>
  <file path="examples/historics/create_from_hash.php" hash="9ffd3510e2aa6173eee6600f6c24f8b1" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script creates a new Historics query from a stream hash.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <function namespace="global" line="58" package="Default">
      <name>usage</name>
      <full_name>\usage</full_name>
      <argument line="58">
        <name>$message</name>
        <default>''</default>
        <type/>
      </argument>
      <argument line="58">
        <name>$exit</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/historics/create_from_hash.php</error>
      <error line="58" code="50009">No DocBlock was found for function \usage()</error>
    </parse_markers>
  </file>
  <file path="examples/historics/create_from_csdl.php" hash="45bacd389f5cae3eece547840f3eef61" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script creates a new Historics query from a file containing CSDL.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <function namespace="global" line="70" package="Default">
      <name>usage</name>
      <full_name>\usage</full_name>
      <argument line="70">
        <name>$message</name>
        <default>''</default>
        <type/>
      </argument>
      <argument line="70">
        <name>$exit</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/historics/create_from_csdl.php</error>
      <error line="70" code="50009">No DocBlock was found for function \usage()</error>
    </parse_markers>
  </file>
  <file path="examples/historics/stop.php" hash="3d8e2139c4ff02882f060b3151bccc9e" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script stops Historics queries in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/historics/stop.php</error>
    </parse_markers>
  </file>
  <file path="examples/historics/view.php" hash="de0781426d76276e8146801ecdaa1285" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script views Historics queries in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/historics/view.php</error>
    </parse_markers>
  </file>
  <file path="examples/twitter-track.php" hash="9e8e452f21675a2d6e11df744a8ffef0" package="Default">
    <include line="19" type="Require" package="Default">
      <name/>
    </include>
    <include line="22" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="29" package="Default">
      <extends/>
      <implements>\DataSift_IStreamConsumerEventHandler</implements>
      <name>EventHandler</name>
      <full_name>\EventHandler</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>onConnect</name>
        <full_name>onConnect</full_name>
        <docblock line="31">
          <description>Called when the stream is connected.</description>
          <long-description/>
          <tag line="31" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Default">
        <name>onInteraction</name>
        <full_name>onInteraction</full_name>
        <docblock line="41">
          <description>Handle incoming data.</description>
          <long-description/>
          <tag line="41" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="41" name="param" description="The interaction data." type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="Default">
        <name>onDeleted</name>
        <full_name>onDeleted</full_name>
        <docblock line="52">
          <description>Handle DELETE requests.</description>
          <long-description/>
          <tag line="52" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="52" name="param" description="The interaction data." type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="Default">
        <name>onStatus</name>
        <full_name>onStatus</full_name>
        <docblock line="65">
          <description>Called when a status message is received.</description>
          <long-description/>
          <tag line="65" name="param" description="The consumer sending the&#10;                                            event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="65" name="param" description="The status type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="The data sent with the&#10;                                            status message." type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Default">
        <name>onWarning</name>
        <full_name>onWarning</full_name>
        <docblock line="83">
          <description>Called when a warning occurs or is received down the stream.</description>
          <long-description/>
          <tag line="83" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="83" name="param" description="The warning message." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="89">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Default">
        <name>onError</name>
        <full_name>onError</full_name>
        <docblock line="94">
          <description>Called when a error occurs or is received down the stream.</description>
          <long-description/>
          <tag line="94" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="94" name="param" description="The error message." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="100">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Default">
        <name>onDisconnect</name>
        <full_name>onDisconnect</full_name>
        <docblock line="105">
          <description>Called when the stream is disconnected.</description>
          <long-description/>
          <tag line="105" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="Default">
        <name>onStopped</name>
        <full_name>onStopped</full_name>
        <docblock line="115">
          <description>Called when the consumer has stopped.</description>
          <long-description/>
          <tag line="115" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="115" name="param" description="The reason the consumer stopped." type="string" variable="$reason">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="121">
          <name>$reason</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/twitter-track.php</error>
      <error line="29" code="50000">No DocBlock was found for \EventHandler</error>
      <error line="41" code="50015">Argument $hash is missing from the Docblock of onInteraction()</error>
      <error line="52" code="50015">Argument $hash is missing from the Docblock of onDeleted()</error>
    </parse_markers>
  </file>
  <file path="examples/dpu.php" hash="47a067671d11e330e81aa78fa68e0434" package="Default">
    <include line="22" type="Require" package="Default">
      <name/>
    </include>
    <include line="25" type="Require" package="Default">
      <name/>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/dpu.php</error>
    </parse_markers>
  </file>
  <file path="examples/push.php" hash="d64f65c9d5d98604e678f4aebbf5a2c4" package="Default">
    <docblock line="2">
      <description>This simple script wraps up calling the push examples.</description>
      <long-description>&lt;p&gt;Usage: push.php &lt;username&gt; &lt;api_key&gt; &lt;command&gt; &lt;arg1&gt; &lt;arg2&gt; ... &lt;argn&gt;&lt;/p&gt;

&lt;p&gt;Note all var names are prefixed with ____ to avoid stamping on anything.&lt;/p&gt;</long-description>
    </docblock>
    <include line="40" type="Require" package="Default">
      <name/>
    </include>
  </file>
  <file path="examples/football-buffered.php" hash="d96a8cfc7721f65f789d70d3b05b1d43" package="Default">
    <include line="19" type="Require" package="Default">
      <name/>
    </include>
    <include line="22" type="Require" package="Default">
      <name/>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/football-buffered.php</error>
    </parse_markers>
  </file>
  <file path="examples/historics.php" hash="1e583eefef3c8593db14c132c2b8e0e6" package="Default">
    <docblock line="2">
      <description>This simple script wraps up calling the Historics examples.</description>
      <long-description>&lt;p&gt;Usage: historics.php &lt;username&gt; &lt;api_key&gt; &lt;command&gt; &lt;arg1&gt; &lt;arg2&gt; ... &lt;argn&gt;&lt;/p&gt;

&lt;p&gt;Note all var names are prefixed with ____ to avoid stamping on anything.&lt;/p&gt;</long-description>
    </docblock>
    <include line="40" type="Require" package="Default">
      <name/>
    </include>
  </file>
  <file path="examples/push/list.php" hash="4d6d63b18b3319955bfa92c32c067b0b" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script lists push subscriptions in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/list.php</error>
    </parse_markers>
  </file>
  <file path="examples/push/delete.php" hash="51d352da230ee83ed66a987045469264" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script deletes push subscriptions from your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/delete.php</error>
    </parse_markers>
  </file>
  <file path="examples/push/pause.php" hash="acc379f830c911a810577b922fdcaaa1" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script pauses push subscriptions in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/pause.php</error>
    </parse_markers>
  </file>
  <file path="examples/push/env.php" hash="648765c056122905cc6435cb6e1c14af" package="Default">
    <include line="7" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="13" package="Default">
      <extends/>
      <name>Env</name>
      <full_name>\Env</full_name>
      <docblock line="9">
        <description>This class is used by the push examples to remove the noise of dealing
with command line arguments.</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$user</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="public" line="15" namespace="global" package="Default">
        <name>$args</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="17">
          <name>$args</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="Default">
        <name>displaySubscriptionDetails</name>
        <full_name>displaySubscriptionDetails</full_name>
        <argument line="42">
          <name>$sub</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/env.php</error>
      <error line="14" code="50018">No DocBlock was found for property $user</error>
      <error line="15" code="50018">No DocBlock was found for property $args</error>
      <error line="17" code="50010">No DocBlock was found for method __construct()</error>
      <error line="42" code="50010">No DocBlock was found for method displaySubscriptionDetails()</error>
    </parse_markers>
  </file>
  <file path="examples/push/push_stream_from_csdl.php" hash="d8aa87e770a36707f5eefeba86bee7a4" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script lists push subscriptions in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <function namespace="global" line="64" package="Default">
      <name>usage</name>
      <full_name>\usage</full_name>
      <argument line="64">
        <name>$message</name>
        <default>''</default>
        <type/>
      </argument>
      <argument line="64">
        <name>$exit</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/push_stream_from_csdl.php</error>
      <error line="64" code="50009">No DocBlock was found for function \usage()</error>
    </parse_markers>
  </file>
  <file path="examples/push/resume.php" hash="ba36bffabb2ee1347c37f1fce855a3a1" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script resumes push subscriptions in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/resume.php</error>
    </parse_markers>
  </file>
  <file path="examples/push/push_historic_from_csdl.php" hash="95b4257ec63eaf6c6c95055a6add9c4e" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script lists push subscriptions in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <function namespace="global" line="83" package="Default">
      <name>parseDate</name>
      <full_name>\parseDate</full_name>
      <argument line="83">
        <name>$date</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="97" package="Default">
      <name>usage</name>
      <full_name>\usage</full_name>
      <argument line="97">
        <name>$message</name>
        <default>''</default>
        <type/>
      </argument>
      <argument line="97">
        <name>$exit</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/push_historic_from_csdl.php</error>
      <error line="83" code="50009">No DocBlock was found for function \parseDate()</error>
      <error line="97" code="50009">No DocBlock was found for function \usage()</error>
    </parse_markers>
  </file>
  <file path="examples/push/viewlog.php" hash="9635407b7ea249a7cadd3900ed81d3f7" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script displays push subscription logs from your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/viewlog.php</error>
    </parse_markers>
  </file>
  <file path="examples/push/push_from_hash.php" hash="4f6853deb50e98b0c7b023b762cbb5bd" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script lists push subscriptions in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <function namespace="global" line="63" package="Default">
      <name>usage</name>
      <full_name>\usage</full_name>
      <argument line="63">
        <name>$message</name>
        <default>''</default>
        <type/>
      </argument>
      <argument line="63">
        <name>$exit</name>
        <default>true</default>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/push_from_hash.php</error>
      <error line="63" code="50009">No DocBlock was found for function \usage()</error>
    </parse_markers>
  </file>
  <file path="examples/push/stop.php" hash="31c2ac68afe98578b4a41b7f984f4206" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script stops push subscriptions in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/stop.php</error>
    </parse_markers>
  </file>
  <file path="examples/push/view.php" hash="8c5f57b7fe2cb3cde164e0907906b9d4" package="Default">
    <include line="12" type="Require" package="Default">
      <name/>
      <docblock line="2">
        <description>This script displays the details of push subscriptions in your account.</description>
        <long-description>&lt;p&gt;NB: Most of the error handling (exception catching) has been removed for
the sake of simplicity. Nearly everything in this library may throw
exceptions, and production code should catch them. See the documentation
for full details.&lt;/p&gt;</long-description>
      </docblock>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/push/view.php</error>
    </parse_markers>
  </file>
  <file path="examples/deletes.php" hash="e4bb9ead0c54ba16747c7bf6f8991758" package="Default">
    <include line="17" type="Require" package="Default">
      <name/>
    </include>
    <include line="20" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="23" package="Default">
      <extends/>
      <implements>\DataSift_IStreamConsumerEventHandler</implements>
      <name>EventHandler</name>
      <full_name>\EventHandler</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="30" package="Default">
        <name>onConnect</name>
        <full_name>onConnect</full_name>
        <docblock line="25">
          <description>Called when the stream is connected.</description>
          <long-description/>
          <tag line="25" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
        </docblock>
        <argument line="30">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="Default">
        <name>onInteraction</name>
        <full_name>onInteraction</full_name>
        <docblock line="35">
          <description>Handle incoming data.</description>
          <long-description/>
          <tag line="35" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="35" name="param" description="The interaction data." type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="Default">
        <name>onDeleted</name>
        <full_name>onDeleted</full_name>
        <docblock line="46">
          <description>Handle DELETE requests.</description>
          <long-description/>
          <tag line="46" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="46" name="param" description="The interaction data." type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="52">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="52">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Default">
        <name>onStatus</name>
        <full_name>onStatus</full_name>
        <docblock line="57">
          <description>Called when a status message is received.</description>
          <long-description/>
          <tag line="57" name="param" description="The consumer sending the&#10;                                            event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="57" name="param" description="The status type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="param" description="The data sent with the&#10;                                            status message." type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="66">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="Default">
        <name>onWarning</name>
        <full_name>onWarning</full_name>
        <docblock line="71">
          <description>Called when a warning occurs or is received down the stream.</description>
          <long-description/>
          <tag line="71" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="71" name="param" description="The warning message." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="77">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="Default">
        <name>onError</name>
        <full_name>onError</full_name>
        <docblock line="82">
          <description>Called when a error occurs or is received down the stream.</description>
          <long-description/>
          <tag line="82" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="82" name="param" description="The error message." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="88">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="Default">
        <name>onDisconnect</name>
        <full_name>onDisconnect</full_name>
        <docblock line="93">
          <description>Called when the stream is disconnected.</description>
          <long-description/>
          <tag line="93" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>onStopped</name>
        <full_name>onStopped</full_name>
        <docblock line="103">
          <description>Called when the consumer has stopped.</description>
          <long-description/>
          <tag line="103" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="103" name="param" description="The reason the consumer stopped." type="string" variable="$reason">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="109">
          <name>$reason</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/deletes.php</error>
      <error line="23" code="50000">No DocBlock was found for \EventHandler</error>
      <error line="35" code="50015">Argument $hash is missing from the Docblock of onInteraction()</error>
      <error line="46" code="50015">Argument $hash is missing from the Docblock of onDeleted()</error>
    </parse_markers>
  </file>
  <file path="examples/consume-stream.php" hash="02f70d27dc5033ff8bca94d34f15acec" package="Default">
    <include line="18" type="Require" package="Default">
      <name/>
    </include>
    <include line="21" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="28" package="Default">
      <extends/>
      <implements>\DataSift_IStreamConsumerEventHandler</implements>
      <name>EventHandler</name>
      <full_name>\EventHandler</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="Default">
        <name>onConnect</name>
        <full_name>onConnect</full_name>
        <docblock line="30">
          <description>Called when the stream is connected.</description>
          <long-description/>
          <tag line="30" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Default">
        <name>onInteraction</name>
        <full_name>onInteraction</full_name>
        <docblock line="40">
          <description>Handle incoming data.</description>
          <long-description/>
          <tag line="40" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="40" name="param" description="The interaction data." type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="46">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="46">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="Default">
        <name>onDeleted</name>
        <full_name>onDeleted</full_name>
        <docblock line="51">
          <description>Handle DELETE requests.</description>
          <long-description/>
          <tag line="51" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="51" name="param" description="The interaction data." type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="57">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="57">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="Default">
        <name>onStatus</name>
        <full_name>onStatus</full_name>
        <docblock line="65">
          <description>Called when a status message is received.</description>
          <long-description/>
          <tag line="65" name="param" description="The consumer sending the&#10;                                            event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="65" name="param" description="The status type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="The data sent with the&#10;                                            status message." type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="74">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Default">
        <name>onWarning</name>
        <full_name>onWarning</full_name>
        <docblock line="83">
          <description>Called when a warning occurs or is received down the stream.</description>
          <long-description/>
          <tag line="83" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="83" name="param" description="The warning message." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="89">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="Default">
        <name>onError</name>
        <full_name>onError</full_name>
        <docblock line="94">
          <description>Called when a error occurs or is received down the stream.</description>
          <long-description/>
          <tag line="94" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="94" name="param" description="The error message." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="100">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="Default">
        <name>onDisconnect</name>
        <full_name>onDisconnect</full_name>
        <docblock line="105">
          <description>Called when the stream is disconnected.</description>
          <long-description/>
          <tag line="105" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="Default">
        <name>onStopped</name>
        <full_name>onStopped</full_name>
        <docblock line="115">
          <description>Called when the consumer has stopped.</description>
          <long-description/>
          <tag line="115" name="param" description="The consumer object." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="115" name="param" description="The reason the consumer stopped." type="string" variable="$reason">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="121">
          <name>$reason</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/consume-stream.php</error>
      <error line="28" code="50000">No DocBlock was found for \EventHandler</error>
      <error line="40" code="50015">Argument $hash is missing from the Docblock of onInteraction()</error>
      <error line="51" code="50015">Argument $hash is missing from the Docblock of onDeleted()</error>
    </parse_markers>
  </file>
  <file path="examples/football.php" hash="de1df6ce11723e37a570aabc792a89f8" package="Default">
    <include line="19" type="Require" package="Default">
      <name/>
    </include>
    <include line="22" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="25" package="Default">
      <extends/>
      <implements>\DataSift_IStreamConsumerEventHandler</implements>
      <name>EventHandler</name>
      <full_name>\EventHandler</full_name>
      <property final="false" static="false" visibility="private" line="27" namespace="global" package="Default">
        <name>$_num</name>
        <default>10</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>onConnect</name>
        <full_name>onConnect</full_name>
        <docblock line="29">
          <description>Called when the stream is connected.</description>
          <long-description/>
          <tag line="29" name="param" description="The consumer sending the event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="29" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="Default">
        <name>onInteraction</name>
        <full_name>onInteraction</full_name>
        <docblock line="41">
          <description>Called for each interaction consumed.</description>
          <long-description/>
          <tag line="41" name="param" description="The consumer sending the&#10;                                            event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="41" name="param" description="The interaction data." type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
          <tag line="41" name="param" description="The hash of the stream that&#10;                                            matched this interaction." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="52">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="52">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="52">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Default">
        <name>onDeleted</name>
        <full_name>onDeleted</full_name>
        <docblock line="64">
          <description>Called for each deletion notification consumed.</description>
          <long-description/>
          <tag line="64" name="param" description="The consumer sending the&#10;                                            event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="64" name="param" description="The interaction data." type="array" variable="$interaction">
            <type by_reference="false">array</type>
          </tag>
          <tag line="64" name="param" description="The hash of the stream that&#10;                                            matched this interaction." type="string" variable="$hash">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="75">
          <name>$interaction</name>
          <default/>
          <type/>
        </argument>
        <argument line="75">
          <name>$hash</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="91" package="Default">
        <name>onStatus</name>
        <full_name>onStatus</full_name>
        <docblock line="82">
          <description>Called when a status message is received.</description>
          <long-description/>
          <tag line="82" name="param" description="The consumer sending the&#10;                                            event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="82" name="param" description="The status type." type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="The data sent with the&#10;                                            status message." type="array" variable="$info">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
        <argument line="91">
          <name>$info</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="Default">
        <name>onWarning</name>
        <full_name>onWarning</full_name>
        <docblock line="100">
          <description>Called when a warning occurs or is received down the stream.</description>
          <long-description/>
          <tag line="100" name="param" description="The consumer sending the event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="100" name="param" description="The warning message." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="Default">
        <name>onError</name>
        <full_name>onError</full_name>
        <docblock line="113">
          <description>Called when an error occurs or is received down the stream.</description>
          <long-description/>
          <tag line="113" name="param" description="consumer The consumer sending the event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="113" name="param" description="The error message." type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="113" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="121">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="Default">
        <name>onDisconnect</name>
        <full_name>onDisconnect</full_name>
        <docblock line="126">
          <description>Called when the stream is disconnected.</description>
          <long-description/>
          <tag line="126" name="param" description="The consumer sending the event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="126" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="146" package="Default">
        <name>onStopped</name>
        <full_name>onStopped</full_name>
        <docblock line="138">
          <description>Called when the consumer stops for some reason.</description>
          <long-description/>
          <tag line="138" name="param" description="consumer The consumer sending the event." type="\DataSift_StreamConsumer" variable="$consumer">
            <type by_reference="false">\DataSift_StreamConsumer</type>
          </tag>
          <tag line="138" name="param" description="The reason the consumer stopped." type="string" variable="$reason">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="146">
          <name>$reason</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file examples/football.php</error>
      <error line="25" code="50000">No DocBlock was found for \EventHandler</error>
      <error line="27" code="50018">No DocBlock was found for property $_num</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="PHP-client" full_name="PHP-client"/>
  <namespace name="global" full_name="global"/>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
